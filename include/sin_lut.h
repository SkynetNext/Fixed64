#pragma once

#include <stdint.h>
#include <array>
#include "primitives.h"

// Sin lookup table with 512 entries
// Covers the range [0,pi/2] with values in Q23.40 format
// Generated with mpmath library at 100 digits precision

namespace math::fp::detail {
// Table maps x in [0,pi/2] to sin(x)
// Values stored in Q23.40 fixed-point format
inline constexpr std::array<int64_t, 512> kSinLut = {
    0x0000000000000000LL, // sin(0.00000000000000) = 0.00000000000000
    0x00000000C9748021LL, // sin(0.00307396541447) = 0.00307396057336
    0x0000000192E88382LL, // sin(0.00614793082894) = 0.00614789210007
    0x000000025C5B8D61LL, // sin(0.00922189624341) = 0.00922176553378
    0x0000000325CD20FDLL, // sin(0.01229586165789) = 0.01229555182867
    0x00000003EF3CC198LL, // sin(0.01536982707236) = 0.01536922193974
    0x00000004B8A9F274LL, // sin(0.01844379248683) = 0.01844274682310
    0x00000005821436D3LL, // sin(0.02151775790130) = 0.02151609743622
    0x000000064B7B11FBLL, // sin(0.02459172331577) = 0.02458924473824
    0x0000000714DE0734LL, // sin(0.02766568873024) = 0.02766215969018
    0x00000007DE3C99C7LL, // sin(0.03073965414471) = 0.03073481325530
    0x00000008A7964D01LL, // sin(0.03381361955919) = 0.03380717639931
    0x0000000970EAA430LL, // sin(0.03688758497366) = 0.03687922009065
    0x0000000A3A3922A9LL, // sin(0.03996155038813) = 0.03995091530080
    0x0000000B03814BC1LL, // sin(0.04303551580260) = 0.04302223300453
    0x0000000BCCC2A2D2LL, // sin(0.04610948121707) = 0.04609314418017
    0x0000000C95FCAB3CLL, // sin(0.04918344663154) = 0.04916361980989
    0x0000000D5F2EE861LL, // sin(0.05225741204601) = 0.05223363087999
    0x0000000E2858DDA9LL, // sin(0.05533137746049) = 0.05530314838114
    0x0000000EF17A0E82LL, // sin(0.05840534287496) = 0.05837214330869
    0x0000000FBA91FE5DLL, // sin(0.06147930828943) = 0.06144058666292
    0x0000001083A030B3LL, // sin(0.06455327370390) = 0.06450844944932
    0x000000114CA42902LL, // sin(0.06762723911837) = 0.06757570267887
    0x00000012159D6ACFLL, // sin(0.07070120453284) = 0.07064231736831
    0x00000012DE8B79A5LL, // sin(0.07377516994731) = 0.07370826454041
    0x00000013A76DD916LL, // sin(0.07684913536179) = 0.07677351522426
    0x0000001470440CBBLL, // sin(0.07992310077626) = 0.07983804045552
    0x00000015390D9836LL, // sin(0.08299706619073) = 0.08290181127670
    0x0000001601C9FF2FLL, // sin(0.08607103160520) = 0.08596479873745
    0x00000016CA78C557LL, // sin(0.08914499701967) = 0.08902697389481
    0x0000001793196E67LL, // sin(0.09221896243414) = 0.09208830781351
    0x000000185BAB7E21LL, // sin(0.09529292784861) = 0.09514877156623
    0x00000019242E7851LL, // sin(0.09836689326309) = 0.09820833623385
    0x00000019ECA1E0CBLL, // sin(0.10144085867756) = 0.10126697290576
    0x0000001AB5053B6DLL, // sin(0.10451482409203) = 0.10432465268013
    0x0000001B7D580C1FLL, // sin(0.10758878950650) = 0.10738134666416
    0x0000001C4599D6D3LL, // sin(0.11066275492097) = 0.11043702597437
    0x0000001D0DCA1F87LL, // sin(0.11373672033544) = 0.11349166173685
    0x0000001DD5E86A41LL, // sin(0.11681068574991) = 0.11654522508757
    0x0000001E9DF43B15LL, // sin(0.11988465116439) = 0.11959768717263
    0x0000001F65ED1621LL, // sin(0.12295861657886) = 0.12264901914854
    0x000000202DD27F8ELL, // sin(0.12603258199333) = 0.12569919218248
    0x00000020F5A3FB94LL, // sin(0.12910654740780) = 0.12874817745258
    0x00000021BD610E73LL, // sin(0.13218051282227) = 0.13179594614820
    0x0000002285093C7CLL, // sin(0.13525447823674) = 0.13484246947020
    0x000000234C9C0A0ALL, // sin(0.13832844365121) = 0.13788771863119
    0x000000241418FB86LL, // sin(0.14140240906569) = 0.14093166485584
    0x00000024DB7F9568LL, // sin(0.14447637448016) = 0.14397427938112
    0x00000025A2CF5C33LL, // sin(0.14755033989463) = 0.14701553345659
    0x000000266A07D47ALL, // sin(0.15062430530910) = 0.15005539834465
    0x00000027312882DFLL, // sin(0.15369827072357) = 0.15309384532086
    0x00000027F830EC11LL, // sin(0.15677223613804) = 0.15613084567413
    0x00000028BF2094CFLL, // sin(0.15984620155251) = 0.15916637070709
    0x0000002985F701E7LL, // sin(0.16292016696699) = 0.16220039173628
    0x0000002A4CB3B838LL, // sin(0.16599413238146) = 0.16523288009245
    0x0000002B13563CAFLL, // sin(0.16906809779593) = 0.16826380712085
    0x0000002BD9DE1449LL, // sin(0.17214206321040) = 0.17129314418148
    0x0000002CA04AC416LL, // sin(0.17521602862487) = 0.17432086264934
    0x0000002D669BD135LL, // sin(0.17828999403934) = 0.17734693391477
    0x0000002E2CD0C0D6LL, // sin(0.18136395945381) = 0.18037132938362
    0x0000002EF2E9183BLL, // sin(0.18443792486829) = 0.18339402047762
    0x0000002FB8E45CB8LL, // sin(0.18751189028276) = 0.18641497863459
    0x000000307EC213B2LL, // sin(0.19058585569723) = 0.18943417530871
    0x000000314481C2A0LL, // sin(0.19365982111170) = 0.19245158197083
    0x000000320A22EF0ELL, // sin(0.19673378652617) = 0.19546717010870
    0x00000032CFA51E99LL, // sin(0.19980775194064) = 0.19848091122725
    0x000000339507D6F2LL, // sin(0.20288171735511) = 0.20149277684887
    0x000000345A4A9DDBLL, // sin(0.20595568276959) = 0.20450273851368
    0x000000351F6CF92ELL, // sin(0.20902964818406) = 0.20751076777978
    0x00000035E46E6ED6LL, // sin(0.21210361359853) = 0.21051683622352
    0x00000036A94E84D3LL, // sin(0.21517757901300) = 0.21352091543980
    0x000000376E0CC13ALL, // sin(0.21825154442747) = 0.21652297704230
    0x0000003832A8AA36LL, // sin(0.22132550984194) = 0.21952299266378
    0x00000038F721C604LL, // sin(0.22439947525641) = 0.22252093395631
    0x00000039BB779AFALL, // sin(0.22747344067089) = 0.22551677259160
    0x0000003A7FA9AF83LL, // sin(0.23054740608536) = 0.22851048026118
    0x0000003B43B78A1FLL, // sin(0.23362137149983) = 0.23150202867675
    0x0000003C07A0B166LL, // sin(0.23669533691430) = 0.23449138957041
    0x0000003CCB64AC04LL, // sin(0.23976930232877) = 0.23747853469491
    0x0000003D8F0300BFLL, // sin(0.24284326774324) = 0.24046343582396
    0x0000003E527B3673LL, // sin(0.24591723315771) = 0.24344606475247
    0x0000003F15CCD414LL, // sin(0.24899119857219) = 0.24642639329680
    0x0000003FD8F760AELL, // sin(0.25206516398666) = 0.24940439329508
    0x000000409BFA6364LL, // sin(0.25513912940113) = 0.25238003660741
    0x000000415ED56373LL, // sin(0.25821309481560) = 0.25535329511619
    0x000000422187E82FLL, // sin(0.26128706023007) = 0.25832414072633
    0x00000042E4117908LL, // sin(0.26436102564454) = 0.26129254536555
    0x00000043A6719D85LL, // sin(0.26743499105901) = 0.26425848098463
    0x0000004468A7DD46LL, // sin(0.27050895647349) = 0.26722191955770
    0x000000452AB3C007LL, // sin(0.27358292188796) = 0.27018283308246
    0x00000045EC94CD9ELL, // sin(0.27665688730243) = 0.27314119358049
    0x00000046AE4A8DFALL, // sin(0.27973085271690) = 0.27609697309747
    0x000000476FD48926LL, // sin(0.28280481813137) = 0.27905014370349
    0x0000004831324748LL, // sin(0.28587878354584) = 0.28200067749329
    0x00000048F26350A1LL, // sin(0.28895274896031) = 0.28494854658651
    0x00000049B3672D8ELL, // sin(0.29202671437479) = 0.28789372312799
    0x0000004A743D6689LL, // sin(0.29510067978926) = 0.29083617928800
    0x0000004B34E58425LL, // sin(0.29817464520373) = 0.29377588726252
    0x0000004BF55F0F15LL, // sin(0.30124861061820) = 0.29671281927349
    0x0000004CB5A99027LL, // sin(0.30432257603267) = 0.29964694756910
    0x0000004D75C49048LL, // sin(0.30739654144714) = 0.30257824442401
    0x0000004E35AF987FLL, // sin(0.31047050686161) = 0.30550668213965
    0x0000004EF56A31F5LL, // sin(0.31354447227609) = 0.30843223304446
    0x0000004FB4F3E5EDLL, // sin(0.31661843769056) = 0.31135486949417
    0x00000050744C3DCBLL, // sin(0.31969240310503) = 0.31427456387203
    0x000000513372C310LL, // sin(0.32276636851950) = 0.31719128858911
    0x00000051F266FF5ELL, // sin(0.32584033393397) = 0.32010501608452
    0x00000052B1287C73LL, // sin(0.32891429934844) = 0.32301571882571
    0x000000536FB6C42ELL, // sin(0.33198826476291) = 0.32592336930870
    0x000000542E11608FLL, // sin(0.33506223017739) = 0.32882794005836
    0x00000054EC37DBB4LL, // sin(0.33813619559186) = 0.33172940362866
    0x00000055AA29BFDDLL, // sin(0.34121016100633) = 0.33462773260293
    0x0000005667E69768LL, // sin(0.34428412642080) = 0.33752289959411
    0x00000057256DECD6LL, // sin(0.34735809183527) = 0.34041487724503
    0x00000057E2BF4ACALL, // sin(0.35043205724974) = 0.34330363822866
    0x000000589FDA3C05LL, // sin(0.35350602266421) = 0.34618915524834
    0x000000595CBE4B6DLL, // sin(0.35657998807868) = 0.34907140103810
    0x0000005A196B0408LL, // sin(0.35965395349316) = 0.35195034836285
    0x0000005AD5DFF100LL, // sin(0.36272791890763) = 0.35482597001869
    0x0000005B921C9DA0LL, // sin(0.36580188432210) = 0.35769823883313
    0x0000005C4E209555LL, // sin(0.36887584973657) = 0.36056712766536
    0x0000005D09EB63B3LL, // sin(0.37194981515104) = 0.36343260940652
    0x0000005DC57C946DLL, // sin(0.37502378056551) = 0.36629465697994
    0x0000005E80D3B35DLL, // sin(0.37809774597998) = 0.36915324334141
    0x0000005F3BF04C7ELL, // sin(0.38117171139446) = 0.37200834147940
    0x0000005FF6D1EBF1LL, // sin(0.38424567680893) = 0.37485992441536
    0x00000060B1781DFDLL, // sin(0.38731964222340) = 0.37770796520396
    0x000000616BE26F0ALL, // sin(0.39039360763787) = 0.38055243693334
    0x0000006226106BA9LL, // sin(0.39346757305234) = 0.38339331272534
    0x00000062E001A08DLL, // sin(0.39654153846681) = 0.38623056573581
    0x0000006399B59A90LL, // sin(0.39961550388128) = 0.38906416915481
    0x00000064532BE6B4LL, // sin(0.40268946929576) = 0.39189409620691
    0x000000650C64121DLL, // sin(0.40576343471023) = 0.39472032015140
    0x00000065C55DAA1ALL, // sin(0.40883740012470) = 0.39754281428256
    0x000000667E183C1DLL, // sin(0.41191136553917) = 0.40036155192992
    0x00000067369355C1LL, // sin(0.41498533095364) = 0.40317650645852
    0x00000067EECE84C7LL, // sin(0.41805929636811) = 0.40598765126912
    0x00000068A6C9571ALL, // sin(0.42113326178258) = 0.40879495979851
    0x000000695E835ACALL, // sin(0.42420722719706) = 0.41159840551969
    0x0000006A15FC1E12LL, // sin(0.42728119261153) = 0.41439796194220
    0x0000006ACD332F52LL, // sin(0.43035515802600) = 0.41719360261232
    0x0000006B84281D15LL, // sin(0.43342912344047) = 0.41998530111331
    0x0000006C3ADA760ELL, // sin(0.43650308885494) = 0.42277303106570
    0x0000006CF149C91BLL, // sin(0.43957705426941) = 0.42555676612752
    0x0000006DA775A542LL, // sin(0.44265101968388) = 0.42833647999455
    0x0000006E5D5D99B2LL, // sin(0.44572498509836) = 0.43111214640056
    0x0000006F130135C6LL, // sin(0.44879895051283) = 0.43388373911756
    0x0000006FC8600902LL, // sin(0.45187291592730) = 0.43665123195606
    0x000000707D79A315LL, // sin(0.45494688134177) = 0.43941459876533
    0x00000071324D93D8LL, // sin(0.45802084675624) = 0.44217381343359
    0x00000071E6DB6B51LL, // sin(0.46109481217071) = 0.44492884988832
    0x000000729B22B9B0LL, // sin(0.46416877758518) = 0.44767968209648
    0x000000734F230F51LL, // sin(0.46724274299966) = 0.45042628406475
    0x0000007402DBFCBCLL, // sin(0.47031670841413) = 0.45316862983979
    0x00000074B64D12A5LL, // sin(0.47339067382860) = 0.45590669350846
    0x000000756975E1EDLL, // sin(0.47646463924307) = 0.45864044919810
    0x000000761C55FBA2LL, // sin(0.47953860465754) = 0.46136987107677
    0x00000076CEECF0FELL, // sin(0.48261257007201) = 0.46409493335344
    0x00000077813A5368LL, // sin(0.48568653548648) = 0.46681561027831
    0x00000078333DB476LL, // sin(0.48876050090096) = 0.46953187614301
    0x00000078E4F6A5ECLL, // sin(0.49183446631543) = 0.47224370528085
    0x000000799664B9BALL, // sin(0.49490843172990) = 0.47495107206705
    0x0000007A47878200LL, // sin(0.49798239714437) = 0.47765395091902
    0x0000007AF85E910DLL, // sin(0.50105636255884) = 0.48035231629656
    0x0000007BA8E9795DLL, // sin(0.50413032797331) = 0.48304614270213
    0x0000007C5927CD9DLL, // sin(0.50720429338778) = 0.48573540468107
    0x0000007D091920A8LL, // sin(0.51027825880226) = 0.48842007682186
    0x0000007DB8BD058BLL, // sin(0.51335222421673) = 0.49110013375635
    0x0000007E68130F80LL, // sin(0.51642618963120) = 0.49377555015998
    0x0000007F171AD1F3LL, // sin(0.51950015504567) = 0.49644630075206
    0x0000007FC5D3E080LL, // sin(0.52257412046014) = 0.49911236029600
    0x00000080743DCEF3LL, // sin(0.52564808587461) = 0.50177370359951
    0x000000812258314CLL, // sin(0.52872205128908) = 0.50443030551487
    0x00000081D0229BB8LL, // sin(0.53179601670356) = 0.50708214093918
    0x000000827D9CA298LL, // sin(0.53486998211803) = 0.50972918481456
    0x000000832AC5DA7FLL, // sin(0.53794394753250) = 0.51237141212842
    0x00000083D79DD831LL, // sin(0.54101791294697) = 0.51500879791368
    0x00000084842430A4LL, // sin(0.54409187836144) = 0.51764131724900
    0x0000008530587903LL, // sin(0.54716584377591) = 0.52026894525903
    0x00000085DC3A46A8LL, // sin(0.55023980919038) = 0.52289165711465
    0x0000008687C92F24LL, // sin(0.55331377460486) = 0.52550942803318
    0x000000873304C838LL, // sin(0.55638774001933) = 0.52812223327863
    0x00000087DDECA7DCLL, // sin(0.55946170543380) = 0.53073004816193
    0x0000008888806438LL, // sin(0.56253567084827) = 0.53333284804118
    0x0000008932BF93AALL, // sin(0.56560963626274) = 0.53593060832186
    0x00000089DCA9CCC6LL, // sin(0.56868360167721) = 0.53852330445706
    0x0000008A863EA652LL, // sin(0.57175756709168) = 0.54111091194772
    0x0000008B2F7DB74BLL, // sin(0.57483153250616) = 0.54369340634290
    0x0000008BD86696E0LL, // sin(0.57790549792063) = 0.54627076323993
    0x0000008C80F8DC79LL, // sin(0.58097946333510) = 0.54884295828472
    0x0000008D29341FB1LL, // sin(0.58405342874957) = 0.55140996717193
    0x0000008DD117F85ALL, // sin(0.58712739416404) = 0.55397176564523
    0x0000008E78A3FE7DLL, // sin(0.59020135957851) = 0.55652832949755
    0x0000008F1FD7CA57LL, // sin(0.59327532499298) = 0.55907963457125
    0x0000008FC6B2F45FLL, // sin(0.59634929040746) = 0.56162565675839
    0x000000906D35153FLL, // sin(0.59942325582193) = 0.56416637200097
    0x00000091135DC5DBLL, // sin(0.60249722123640) = 0.56670175629112
    0x00000091B92C9F4DLL, // sin(0.60557118665087) = 0.56923178567133
    0x000000925EA13AE7LL, // sin(0.60864515206534) = 0.57175643623472
    0x0000009303BB3234LL, // sin(0.61171911747981) = 0.57427568412521
    0x00000093A87A1EF5LL, // sin(0.61479308289428) = 0.57678950553779
    0x000000944CDD9B26LL, // sin(0.61786704830876) = 0.57929787671872
    0x00000094F0E540F8LL, // sin(0.62094101372323) = 0.58180077396575
    0x000000959490AAD8LL, // sin(0.62401497913770) = 0.58429817362837
    0x0000009637DF736CLL, // sin(0.62708894455217) = 0.58679005210800
    0x00000096DAD13590LL, // sin(0.63016290996664) = 0.58927638585826
    0x000000977D658C5FLL, // sin(0.63323687538111) = 0.59175715138514
    0x000000981F9C1329LL, // sin(0.63631084079558) = 0.59423232524724
    0x00000098C174657BLL, // sin(0.63938480621006) = 0.59670188405602
    0x0000009962EE1F1BLL, // sin(0.64245877162453) = 0.59916580447599
    0x0000009A0408DC09LL, // sin(0.64553273703900) = 0.60162406322492
    0x0000009AA4C43882LL, // sin(0.64860670245347) = 0.60407663707411
    0x0000009B451FD0FDLL, // sin(0.65168066786794) = 0.60652350284856
    0x0000009BE51B422BLL, // sin(0.65475463328241) = 0.60896463742720
    0x0000009C84B628FBLL, // sin(0.65782859869688) = 0.61140001774313
    0x0000009D23F02295LL, // sin(0.66090256411136) = 0.61382962078381
    0x0000009DC2C8CC5FLL, // sin(0.66397652952583) = 0.61625342359132
    0x0000009E613FC3FBLL, // sin(0.66705049494030) = 0.61867140326250
    0x0000009EFF54A747LL, // sin(0.67012446035477) = 0.62108353694927
    0x0000009F9D07145FLL, // sin(0.67319842576924) = 0.62348980185873
    0x000000A03A56A999LL, // sin(0.67627239118371) = 0.62589017525350
    0x000000A0D743058CLL, // sin(0.67934635659818) = 0.62828463445181
    0x000000A173CBC70ALL, // sin(0.68242032201266) = 0.63067315682781
    0x000000A20FF08D23LL, // sin(0.68549428742713) = 0.63305571981175
    0x000000A2ABB0F725LL, // sin(0.68856825284160) = 0.63543230089018
    0x000000A3470CA49CLL, // sin(0.69164221825607) = 0.63780287760617
    0x000000A3E2033555LL, // sin(0.69471618367054) = 0.64016742755953
    0x000000A47C944957LL, // sin(0.69779014908501) = 0.64252592840704
    0x000000A516BF80EBLL, // sin(0.70086411449948) = 0.64487835786261
    0x000000A5B0847C98LL, // sin(0.70393807991396) = 0.64722469369753
    0x000000A649E2DD25LL, // sin(0.70701204532843) = 0.64956491374068
    0x000000A6E2DA4398LL, // sin(0.71008601074290) = 0.65189899587871
    0x000000A77B6A5136LL, // sin(0.71315997615737) = 0.65422691805630
    0x000000A81392A787LL, // sin(0.71623394157184) = 0.65654865827630
    0x000000A8AB52E84FLL, // sin(0.71930790698631) = 0.65886419459999
    0x000000A942AAB596LL, // sin(0.72238187240078) = 0.66117350514729
    0x000000A9D999B1A3LL, // sin(0.72545583781526) = 0.66347656809693
    0x000000AA701F7EFELL, // sin(0.72852980322973) = 0.66577336168668
    0x000000AB063BC06FLL, // sin(0.73160376864420) = 0.66806386421353
    0x000000AB9BEE1903LL, // sin(0.73467773405867) = 0.67034805403396
    0x000000AC31362C05LL, // sin(0.73775169947314) = 0.67262590956407
    0x000000ACC6139D03LL, // sin(0.74082566488761) = 0.67489740927981
    0x000000AD5A860FCDLL, // sin(0.74389963030208) = 0.67716253171720
    0x000000ADEE8D2876LL, // sin(0.74697359571656) = 0.67942125547253
    0x000000AE82288B52LL, // sin(0.75004756113103) = 0.68167355920253
    0x000000AF1557DCFALL, // sin(0.75312152654550) = 0.68391942162461
    0x000000AFA81AC247LL, // sin(0.75619549195997) = 0.68615882151704
    0x000000B03A70E057LL, // sin(0.75926945737444) = 0.68839173771916
    0x000000B0CC59DC8BLL, // sin(0.76234342278891) = 0.69061814913157
    0x000000B15DD55C88LL, // sin(0.76541738820338) = 0.69283803471634
    0x000000B1EEE30635LL, // sin(0.76849135361786) = 0.69505137349720
    0x000000B27F827FC0LL, // sin(0.77156531903233) = 0.69725814455975
    0x000000B30FB36F9ALL, // sin(0.77463928444680) = 0.69945832705165
    0x000000B39F757C76LL, // sin(0.77771324986127) = 0.70165190018280
    0x000000B42EC84D4ELL, // sin(0.78078721527574) = 0.70383884322557
    0x000000B4BDAB8963LL, // sin(0.78386118069021) = 0.70601913551498
    0x000000B54C1ED836LL, // sin(0.78693514610468) = 0.70819275644889
    0x000000B5DA21E191LL, // sin(0.79000911151916) = 0.71035968548820
    0x000000B667B44D83LL, // sin(0.79308307693363) = 0.71251990215703
    0x000000B6F4D5C460LL, // sin(0.79615704234810) = 0.71467338604296
    0x000000B78185EEC2LL, // sin(0.79923100776257) = 0.71682011679716
    0x000000B80DC47589LL, // sin(0.80230497317704) = 0.71896007413462
    0x000000B8999101DDLL, // sin(0.80537893859151) = 0.72109323783433
    0x000000B924EB3D2ALL, // sin(0.80845290400598) = 0.72321958773949
    0x000000B9AFD2D126LL, // sin(0.81152686942046) = 0.72533910375768
    0x000000BA3A4767CALL, // sin(0.81460083483493) = 0.72745176586104
    0x000000BAC448AB59LL, // sin(0.81767480024940) = 0.72955755408649
    0x000000BB4DD6465ELL, // sin(0.82074876566387) = 0.73165644853589
    0x000000BBD6EFE3A9LL, // sin(0.82382273107834) = 0.73374842937626
    0x000000BC5F952E54LL, // sin(0.82689669649281) = 0.73583347683994
    0x000000BCE7C5D1C0LL, // sin(0.82997066190728) = 0.73791157122477
    0x000000BD6F817996LL, // sin(0.83304462732176) = 0.73998269289431
    0x000000BDF6C7D1C8LL, // sin(0.83611859273623) = 0.74204682227800
    0x000000BE7D988692LL, // sin(0.83919255815070) = 0.74410393987136
    0x000000BF03F34476LL, // sin(0.84226652356517) = 0.74615402623615
    0x000000BF89D7B841LL, // sin(0.84534048897964) = 0.74819706200059
    0x000000C00F458F09LL, // sin(0.84841445439411) = 0.75023302785950
    0x000000C0943C762CLL, // sin(0.85148841980858) = 0.75226190457453
    0x000000C118BC1B54LL, // sin(0.85456238522306) = 0.75428367297430
    0x000000C19CC42C74LL, // sin(0.85763635063753) = 0.75629831395459
    0x000000C2205457C8LL, // sin(0.86071031605200) = 0.75830580847856
    0x000000C2A36C4BD7LL, // sin(0.86378428146647) = 0.76030613757688
    0x000000C3260BB772LL, // sin(0.86685824688094) = 0.76229928234791
    0x000000C3A83249B7LL, // sin(0.86993221229541) = 0.76428522395793
    0x000000C429DFB20BLL, // sin(0.87300617770988) = 0.76626394364127
    0x000000C4AB13A020LL, // sin(0.87608014312436) = 0.76823542270050
    0x000000C52BCDC3F4LL, // sin(0.87915410853883) = 0.77019964250660
    0x000000C5AC0DCDD0LL, // sin(0.88222807395330) = 0.77215658449916
    0x000000C62BD36E47LL, // sin(0.88530203936777) = 0.77410623018655
    0x000000C6AB1E563ALL, // sin(0.88837600478224) = 0.77604856114604
    0x000000C729EE36D5LL, // sin(0.89144997019671) = 0.77798355902407
    0x000000C7A842C190LL, // sin(0.89452393561118) = 0.77991120553634
    0x000000C8261BA82ELL, // sin(0.89759790102566) = 0.78183148246803
    0x000000C8A3789CC3LL, // sin(0.90067186644013) = 0.78374437167395
    0x000000C9205951ABLL, // sin(0.90374583185460) = 0.78564985507871
    0x000000C99CBD7992LL, // sin(0.90681979726907) = 0.78754791467693
    0x000000CA18A4C76ELL, // sin(0.90989376268354) = 0.78943853253334
    0x000000CA940EEE87LL, // sin(0.91296772809801) = 0.79132169078302
    0x000000CB0EFBA26ELL, // sin(0.91604169351248) = 0.79319737163153
    0x000000CB896A9704LL, // sin(0.91911565892696) = 0.79506555735506
    0x000000CC035B8077LL, // sin(0.92218962434143) = 0.79692623030067
    0x000000CC7CCE1344LL, // sin(0.92526358975590) = 0.79877937288636
    0x000000CCF5C20435LL, // sin(0.92833755517037) = 0.80062496760134
    0x000000CD6E370864LL, // sin(0.93141152058484) = 0.80246299700609
    0x000000CDE62CD538LL, // sin(0.93448548599931) = 0.80429344373261
    0x000000CE5DA32067LL, // sin(0.93755945141378) = 0.80611629048454
    0x000000CED4999FF7LL, // sin(0.94063341682826) = 0.80793152003733
    0x000000CF4B100A3DLL, // sin(0.94370738224273) = 0.80973911523841
    0x000000CFC10615DCLL, // sin(0.94678134765720) = 0.81153905900736
    0x000000D0367B79C9LL, // sin(0.94985531307167) = 0.81333133433605
    0x000000D0AB6FED44LL, // sin(0.95292927848614) = 0.81511592428880
    0x000000D11FE327E3LL, // sin(0.95600324390061) = 0.81689281200257
    0x000000D193D4E187LL, // sin(0.95907720931508) = 0.81866198068709
    0x000000D20744D264LL, // sin(0.96215117472956) = 0.82042341362505
    0x000000D27A32B2FDLL, // sin(0.96522514014403) = 0.82217709417219
    0x000000D2EC9E3C26LL, // sin(0.96829910555850) = 0.82392300575755
    0x000000D35E872704LL, // sin(0.97137307097297) = 0.82566113188357
    0x000000D3CFED2D0DLL, // sin(0.97444703638744) = 0.82739145612624
    0x000000D440D00807LL, // sin(0.97752100180191) = 0.82911396213529
    0x000000D4B12F720ALL, // sin(0.98059496721638) = 0.83082863363432
    0x000000D5210B257FLL, // sin(0.98366893263085) = 0.83253545442095
    0x000000D59062DD22LL, // sin(0.98674289804533) = 0.83423440836701
    0x000000D5FF3653FFLL, // sin(0.98981686345980) = 0.83592547941864
    0x000000D66D854574LL, // sin(0.99289082887427) = 0.83760865159647
    0x000000D6DB4F6D32LL, // sin(0.99596479428874) = 0.83928390899579
    0x000000D74894873CLL, // sin(0.99903875970321) = 0.84095123578665
    0x000000D7B5544FE6LL, // sin(1.00211272511768) = 0.84261061621407
    0x000000D8218E83DALL, // sin(1.00518669053215) = 0.84426203459812
    0x000000D88D42E011LL, // sin(1.00826065594663) = 0.84590547533414
    0x000000D8F87121D8LL, // sin(1.01133462136110) = 0.84754092289283
    0x000000D9631906D1LL, // sin(1.01440858677557) = 0.84916836182043
    0x000000D9CD3A4CEELL, // sin(1.01748255219004) = 0.85078777673885
    0x000000DA36D4B276LL, // sin(1.02055651760451) = 0.85239915234583
    0x000000DA9FE7F605LL, // sin(1.02363048301898) = 0.85400247341507
    0x000000DB0873D688LL, // sin(1.02670444843345) = 0.85559772479637
    0x000000DB70781341LL, // sin(1.02977841384793) = 0.85718489141579
    0x000000DBD7F46BC7LL, // sin(1.03285237926240) = 0.85876395827580
    0x000000DC3EE8A003LL, // sin(1.03592634467687) = 0.86033491045539
    0x000000DCA5547034LL, // sin(1.03900031009134) = 0.86189773311022
    0x000000DD0B379CEDLL, // sin(1.04207427550581) = 0.86345241147279
    0x000000DD7091E716LL, // sin(1.04514824092028) = 0.86499893085254
    0x000000DDD5630FEALL, // sin(1.04822220633475) = 0.86653727663601
    0x000000DE39AAD8FCLL, // sin(1.05129617174923) = 0.86806743428699
    0x000000DE9D690431LL, // sin(1.05437013716370) = 0.86958938934661
    0x000000DF009D53C5LL, // sin(1.05744410257817) = 0.87110312743354
    0x000000DF63478A49LL, // sin(1.06051806799264) = 0.87260863424408
    0x000000DFC5676AA3LL, // sin(1.06359203340711) = 0.87410589555231
    0x000000E026FCB80FLL, // sin(1.06666599882158) = 0.87559489721023
    0x000000E088073620LL, // sin(1.06973996423605) = 0.87707562514787
    0x000000E0E886A8BELL, // sin(1.07281392965053) = 0.87854806537346
    0x000000E1487AD425LL, // sin(1.07588789506500) = 0.88001220397354
    0x000000E1A7E37CEBLL, // sin(1.07896186047947) = 0.88146802711307
    0x000000E206C067FALL, // sin(1.08203582589394) = 0.88291552103563
    0x000000E265115A93LL, // sin(1.08510979130841) = 0.88435467206347
    0x000000E2C2D61A4FLL, // sin(1.08818375672288) = 0.88578546659768
    0x000000E3200E6D1BLL, // sin(1.09125772213735) = 0.88720789111831
    0x000000E37CBA193DLL, // sin(1.09433168755183) = 0.88862193218453
    0x000000E3D8D8E553LL, // sin(1.09740565296630) = 0.89002757643468
    0x000000E4346A984FLL, // sin(1.10047961838077) = 0.89142481058647
    0x000000E48F6EF97ELL, // sin(1.10355358379524) = 0.89281362143709
    0x000000E4E9E5D083LL, // sin(1.10662754920971) = 0.89419399586331
    0x000000E543CEE557LL, // sin(1.10970151462418) = 0.89556592082161
    0x000000E59D2A004DLL, // sin(1.11277548003865) = 0.89692938334832
    0x000000E5F5F6EA0FLL, // sin(1.11584944545313) = 0.89828437055974
    0x000000E64E356BA0LL, // sin(1.11892341086760) = 0.89963086965224
    0x000000E6A5E54E5ALL, // sin(1.12199737628207) = 0.90096886790242
    0x000000E6FD065BF0LL, // sin(1.12507134169654) = 0.90229835266718
    0x000000E753985E6DLL, // sin(1.12814530711101) = 0.90361931138388
    0x000000E7A99B2035LL, // sin(1.13121927252548) = 0.90493173157044
    0x000000E7FF0E6C04LL, // sin(1.13429323793995) = 0.90623560082548
    0x000000E853F20CEFLL, // sin(1.13736720335443) = 0.90753090682839
    0x000000E8A845CE66LL, // sin(1.14044116876890) = 0.90881763733950
    0x000000E8FC097C2FLL, // sin(1.14351513418337) = 0.91009578020017
    0x000000E94F3CE26CLL, // sin(1.14658909959784) = 0.91136532333288
    0x000000E9A1DFCD95LL, // sin(1.14966306501231) = 0.91262625474141
    0x000000E9F3F20A7FLL, // sin(1.15273703042678) = 0.91387856251090
    0x000000EA45736657LL, // sin(1.15581099584125) = 0.91512223480795
    0x000000EA9663AEA3LL, // sin(1.15888496125573) = 0.91635725988081
    0x000000EAE6C2B145LL, // sin(1.16195892667020) = 0.91758362605939
    0x000000EB36903C76LL, // sin(1.16503289208467) = 0.91880132175546
    0x000000EB85CC1ECBLL, // sin(1.16810685749914) = 0.92001033546269
    0x000000EBD4762733LL, // sin(1.17118082291361) = 0.92121065575680
    0x000000EC228E24F8LL, // sin(1.17425478832808) = 0.92240227129566
    0x000000EC7013E7BDLL, // sin(1.17732875374255) = 0.92358517081939
    0x000000ECBD073F80LL, // sin(1.18040271915703) = 0.92475934315048
    0x000000ED0967FC9ALL, // sin(1.18347668457150) = 0.92592477719385
    0x000000ED5535EFBFLL, // sin(1.18655064998597) = 0.92708146193703
    0x000000EDA070E9FDLL, // sin(1.18962461540044) = 0.92822938645022
    0x000000EDEB18BCBELL, // sin(1.19269858081491) = 0.92936853988637
    0x000000EE352D39C6LL, // sin(1.19577254622938) = 0.93049891148133
    0x000000EE7EAE3336LL, // sin(1.19884651164385) = 0.93162049055394
    0x000000EEC79B7B88LL, // sin(1.20192047705833) = 0.93273326650611
    0x000000EF0FF4E594LL, // sin(1.20499444247280) = 0.93383722882293
    0x000000EF57BA448CLL, // sin(1.20806840788727) = 0.93493236707277
    0x000000EF9EEB6BFELL, // sin(1.21114237330174) = 0.93601867090741
    0x000000EFE5882FD3LL, // sin(1.21421633871621) = 0.93709613006206
    0x000000F02B906451LL, // sin(1.21729030413068) = 0.93816473435556
    0x000000F07103DE1ALL, // sin(1.22036426954515) = 0.93922447369038
    0x000000F0B5E2722CLL, // sin(1.22343823495963) = 0.94027533805277
    0x000000F0FA2BF5E0LL, // sin(1.22651220037410) = 0.94131731751285
    0x000000F13DE03EEDLL, // sin(1.22958616578857) = 0.94235040222468
    0x000000F180FF2366LL, // sin(1.23266013120304) = 0.94337458242639
    0x000000F1C38879B9LL, // sin(1.23573409661751) = 0.94438984844024
    0x000000F2057C18B3LL, // sin(1.23880806203198) = 0.94539619067271
    0x000000F246D9D77DLL, // sin(1.24188202744645) = 0.94639359961462
    0x000000F287A18D9ALL, // sin(1.24495599286093) = 0.94738206584120
    0x000000F2C7D312EFLL, // sin(1.24802995827540) = 0.94836158001217
    0x000000F3076E3FBALL, // sin(1.25110392368987) = 0.94933213287187
    0x000000F34672EC97LL, // sin(1.25417788910434) = 0.95029371524927
    0x000000F384E0F280LL, // sin(1.25725185451881) = 0.95124631805816
    0x000000F3C2B82ACBLL, // sin(1.26032581993328) = 0.95218993229714
    0x000000F3FFF86F2ELL, // sin(1.26339978534775) = 0.95312454904975
    0x000000F43CA199BALL, // sin(1.26647375076223) = 0.95405015948456
    0x000000F478B384DELL, // sin(1.26954771617670) = 0.95496675485526
    0x000000F4B42E0B68LL, // sin(1.27262168159117) = 0.95587432650068
    0x000000F4EF110881LL, // sin(1.27569564700564) = 0.95677286584495
    0x000000F5295C57B2LL, // sin(1.27876961242011) = 0.95766236439755
    0x000000F5630FD4E2LL, // sin(1.28184357783458) = 0.95854281375337
    0x000000F59C2B5C56LL, // sin(1.28491754324905) = 0.95941420559283
    0x000000F5D4AECAB0LL, // sin(1.28799150866353) = 0.96027653168192
    0x000000F60C99FCF1LL, // sin(1.29106547407800) = 0.96112978387230
    0x000000F643ECD078LL, // sin(1.29413943949247) = 0.96197395410137
    0x000000F67AA72302LL, // sin(1.29721340490694) = 0.96280903439235
    0x000000F6B0C8D2ABLL, // sin(1.30028737032141) = 0.96363501685436
    0x000000F6E651BDEELL, // sin(1.30336133573588) = 0.96445189368247
    0x000000F71B41C3A4LL, // sin(1.30643530115035) = 0.96525965715780
    0x000000F74F98C304LL, // sin(1.30950926656483) = 0.96605829964760
    0x000000F783569BA4LL, // sin(1.31258323197930) = 0.96684781360528
    0x000000F7B67B2D7BLL, // sin(1.31565719739377) = 0.96762819157052
    0x000000F7E90658DCLL, // sin(1.31873116280824) = 0.96839942616934
    0x000000F81AF7FE7BLL, // sin(1.32180512822271) = 0.96916151011415
    0x000000F84C4FFF69LL, // sin(1.32487909363718) = 0.96991443620380
    0x000000F87D0E3D19LL, // sin(1.32795305905165) = 0.97065819732372
    0x000000F8AD32995BLL, // sin(1.33102702446613) = 0.97139278644591
    0x000000F8DCBCF65ELL, // sin(1.33410098988060) = 0.97211819662906
    0x000000F90BAD36B2LL, // sin(1.33717495529507) = 0.97283442101858
    0x000000F93A033D46LL, // sin(1.34024892070954) = 0.97354145284667
    0x000000F967BEED69LL, // sin(1.34332288612401) = 0.97423928543242
    0x000000F994E02AC7LL, // sin(1.34639685153848) = 0.97492791218182
    0x000000F9C166D96ELL, // sin(1.34947081695295) = 0.97560732658787
    0x000000F9ED52DDCCLL, // sin(1.35254478236743) = 0.97627752223061
    0x000000FA18A41CAELL, // sin(1.35561874778190) = 0.97693849277718
    0x000000FA435A7B40LL, // sin(1.35869271319637) = 0.97759023198191
    0x000000FA6D75DF0FLL, // sin(1.36176667861084) = 0.97823273368634
    0x000000FA96F62E07LL, // sin(1.36484064402531) = 0.97886599181931
    0x000000FABFDB4E76LL, // sin(1.36791460943978) = 0.97949000039701
    0x000000FAE8252709LL, // sin(1.37098857485425) = 0.98010475352301
    0x000000FB0FD39ECBLL, // sin(1.37406254026873) = 0.98071024538836
    0x000000FB36E69D2BLL, // sin(1.37713650568320) = 0.98130647027161
    0x000000FB5D5E09F6LL, // sin(1.38021047109767) = 0.98189342253888
    0x000000FB8339CD59LL, // sin(1.38328443651214) = 0.98247109664390
    0x000000FBA879CFE4LL, // sin(1.38635840192661) = 0.98303948712809
    0x000000FBCD1DFA84LL, // sin(1.38943236734108) = 0.98359858862057
    0x000000FBF1263689LL, // sin(1.39250633275555) = 0.98414839583827
    0x000000FC14926DA2LL, // sin(1.39558029817003) = 0.98468890358589
    0x000000FC376289E1LL, // sin(1.39865426358450) = 0.98522010675606
    0x000000FC599675B5LL, // sin(1.40172822899897) = 0.98574200032929
    0x000000FC7B2E1BF1LL, // sin(1.40480219441344) = 0.98625457937409
    0x000000FC9C2967C7LL, // sin(1.40787615982791) = 0.98675783904695
    0x000000FCBC8844CALL, // sin(1.41095012524238) = 0.98725177459245
    0x000000FCDC4A9EF0LL, // sin(1.41402409065685) = 0.98773638134326
    0x000000FCFB70628CLL, // sin(1.41709805607133) = 0.98821165472022
    0x000000FD19F97C56LL, // sin(1.42017202148580) = 0.98867759023234
    0x000000FD37E5D963LL, // sin(1.42324598690027) = 0.98913418347688
    0x000000FD5535672DLL, // sin(1.42631995231474) = 0.98958143013937
    0x000000FD71E8138CLL, // sin(1.42939391772921) = 0.99001932599367
    0x000000FD8DFDCCBCLL, // sin(1.43246788314368) = 0.99044786690198
    0x000000FDA9768158LL, // sin(1.43554184855815) = 0.99086704881491
    0x000000FDC452205CLL, // sin(1.43861581397263) = 0.99127686777151
    0x000000FDDE909927LL, // sin(1.44168977938710) = 0.99167731989929
    0x000000FDF831DB78LL, // sin(1.44476374480157) = 0.99206840141427
    0x000000FE1135D770LL, // sin(1.44783771021604) = 0.99245010862103
    0x000000FE299C7D91LL, // sin(1.45091167563051) = 0.99282243791272
    0x000000FE4165BEC0LL, // sin(1.45398564104498) = 0.99318538577110
    0x000000FE58918C41LL, // sin(1.45705960645945) = 0.99353894876658
    0x000000FE6F1FD7BALL, // sin(1.46013357187393) = 0.99388312355827
    0x000000FE85109335LL, // sin(1.46320753728840) = 0.99421790689395
    0x000000FE9A63B11ALL, // sin(1.46628150270287) = 0.99454329561019
    0x000000FEAF192435LL, // sin(1.46935546811734) = 0.99485928663229
    0x000000FEC330DFB3LL, // sin(1.47242943353181) = 0.99516587697438
    0x000000FED6AAD722LL, // sin(1.47550339894628) = 0.99546306373940
    0x000000FEE986FE74LL, // sin(1.47857736436075) = 0.99575084411917
    0x000000FEFBC549FALL, // sin(1.48165132977523) = 0.99602921539437
    0x000000FF0D65AE68LL, // sin(1.48472529518970) = 0.99629817493461
    0x000000FF1E6820D4LL, // sin(1.48779926060417) = 0.99655772019841
    0x000000FF2ECC96B4LL, // sin(1.49087322601864) = 0.99680784873326
    0x000000FF3E9305E3LL, // sin(1.49394719143311) = 0.99704855817563
    0x000000FF4DBB649BLL, // sin(1.49702115684758) = 0.99727984625101
    0x000000FF5C45A97ALL, // sin(1.50009512226205) = 0.99750171077389
    0x000000FF6A31CB7ELL, // sin(1.50316908767653) = 0.99771414964781
    0x000000FF777FC208LL, // sin(1.50624305309100) = 0.99791716086539
    0x000000FF842F84DCLL, // sin(1.50931701850547) = 0.99811074250832
    0x000000FF90410C1DLL, // sin(1.51239098391994) = 0.99829489274740
    0x000000FF9BB45052LL, // sin(1.51546494933441) = 0.99846960984255
    0x000000FFA6894A65LL, // sin(1.51853891474888) = 0.99863489214282
    0x000000FFB0BFF3A0LL, // sin(1.52161288016335) = 0.99879073808641
    0x000000FFBA5845B1LL, // sin(1.52468684557783) = 0.99893714620069
    0x000000FFC3523AA4LL, // sin(1.52776081099230) = 0.99907411510223
    0x000000FFCBADCCEDLL, // sin(1.53083477640677) = 0.99920164349676
    0x000000FFD36AF75ELL, // sin(1.53390874182124) = 0.99931973017924
    0x000000FFDA89B52BLL, // sin(1.53698270723571) = 0.99942837403383
    0x000000FFE10A01EDLL, // sin(1.54005667265018) = 0.99952757403393
    0x000000FFE6EBD99CLL, // sin(1.54313063806465) = 0.99961732924218
    0x000000FFEC2F3894LL, // sin(1.54620460347913) = 0.99969763881046
    0x000000FFF0D41B93LL, // sin(1.54927856889360) = 0.99976850197989
    0x000000FFF4DA7FB8LL, // sin(1.55235253430807) = 0.99982991808088
    0x000000FFF8426285LL, // sin(1.55542649972254) = 0.99988188653309
    0x000000FFFB0BC1DFLL, // sin(1.55850046513701) = 0.99992440684545
    0x000000FFFD369C0CLL, // sin(1.56157443055148) = 0.99995747861619
    0x000000FFFEC2EFB3LL, // sin(1.56464839596595) = 0.99998110153279
    0x000000FFFFB0BBE0LL, // sin(1.56772236138043) = 0.99999527537204
    0x0000010000000000LL  // sin(1.57079632679490) = 1.00000000000000
};

// Fast lookup sin(x) with linear interpolation between table entries
// Input x is in fixed-point format with specified fraction bits representing angle in radians
// Output is in Q23.40 fixed-point format representing sin(x)
// Precision: ~1e-6 when input_fraction_bits=32
inline constexpr auto LookupSinFast(int64_t x, int input_fraction_bits) noexcept -> int64_t {
    // Constants
    constexpr int64_t kPi = 0x000003243F6A8885LL;  // pi = 3.141592653589793
    constexpr int64_t kPiOver2 = 0x000001921FB54442LL;  // pi/2 = 1.5707963267948966
    constexpr int64_t kTwoPi = 0x000006487ED5110BLL;  // 2*pi = 6.283185307179586
    constexpr int64_t kLutInterval = 0x000145500D592E39LL;  // LUT conversion factor
    constexpr int kOutputFractionBits = 40;  // Output format: Q23.40

    // Convert input to Q23.40 format if needed
    if (input_fraction_bits != kOutputFractionBits) {
        if (input_fraction_bits < kOutputFractionBits) {
            x <<= (kOutputFractionBits - input_fraction_bits);
        } else {
            x >>= (input_fraction_bits - kOutputFractionBits);
        }
    }

    // 1. Normalize angle to [0, 2*pi)
    x = x % kTwoPi;
    if (x < 0) {
        x += kTwoPi;
    }

    // 2. Determine quadrant and map to [0, pi/2]
    bool flip_sign = false;
    if (x > kPi) {
        // 3rd and 4th quadrants: sin(x) = -sin(x - pi)
        x -= kPi;
        flip_sign = true;
    }
    if (x > kPiOver2) {
        // 2nd and 4th quadrants: sin(x) = sin(pi - x)
        x = kPi - x;
    }

    // 3. Calculate lookup table index and fractional part
    int64_t idx_scaled = Primitives::Fixed64Mul(x, kLutInterval, kOutputFractionBits);
    int idx = static_cast<int>(idx_scaled >> kOutputFractionBits);
    int64_t frac = idx_scaled & ((1LL << kOutputFractionBits) - 1);

    // 4. Clamp index to valid range
    if (idx < 0) {
        idx = 0;
        frac = 0;
    } else if (idx >= static_cast<int>(kSinLut.size()) - 1) {
        idx = static_cast<int>(kSinLut.size()) - 2;
        frac = (1LL << kOutputFractionBits) - 1;
    }

    // 5. Linear interpolation between table entries
    int64_t y0 = kSinLut[idx];
    int64_t y1 = kSinLut[idx + 1];
    int64_t diff = y1 - y0;
    int64_t interpolated_value = y0 + Primitives::Fixed64Mul(diff, frac, kOutputFractionBits);

    // 6. Apply sign flip if necessary
    if (flip_sign) {
        interpolated_value = -interpolated_value;
    }

    // 7. Convert result back to original input format if needed
    if (input_fraction_bits != kOutputFractionBits) {
        if (input_fraction_bits < kOutputFractionBits) {
            interpolated_value >>= (kOutputFractionBits - input_fraction_bits);
        } else {
            interpolated_value <<= (input_fraction_bits - kOutputFractionBits);
        }
    }

    return interpolated_value;
}

// Lookup sin(x) with optimized Hermite cubic interpolation between table entries
// Input x is in fixed-point format with specified fraction bits representing angle in radians
// Output is in Q23.40 fixed-point format representing sin(x)
// Precision: ~1.0e-9 when input_fraction_bits=32 (about 1500x more accurate than fast version)
inline constexpr auto LookupSin(int64_t x, int input_fraction_bits) noexcept -> int64_t {
    // Constants
    constexpr int64_t kPi = 0x000003243F6A8885LL;  // pi = 3.141592653589793
    constexpr int64_t kPiOver2 = 0x000001921FB54442LL;  // pi/2 = 1.5707963267948966
    constexpr int64_t kTwoPi = 0x000006487ED5110BLL;  // 2*pi = 6.283185307179586
    constexpr int64_t kLutInterval = 0x000145500D592E39LL;  // LUT conversion factor
    constexpr int kOutputFractionBits = 40;  // Output format: Q23.40
    constexpr int64_t kOne = 1LL << kOutputFractionBits;  // 1.0 in fixed-point

    // Convert input to Q23.40 format if needed
    if (input_fraction_bits != kOutputFractionBits) {
        if (input_fraction_bits < kOutputFractionBits) {
            x <<= (kOutputFractionBits - input_fraction_bits);
        } else {
            x >>= (input_fraction_bits - kOutputFractionBits);
        }
    }

    // 1. Normalize angle to [0, 2*pi)
    x = x % kTwoPi;
    if (x < 0) {
        x += kTwoPi;
    }

    // 2. Determine quadrant and map to [0, pi/2]
    bool flip_sign = false;
    if (x > kPi) {
        // 3rd and 4th quadrants: sin(x) = -sin(x - pi)
        x -= kPi;
        flip_sign = true;
    }
    if (x > kPiOver2) {
        // 2nd and 4th quadrants: sin(x) = sin(pi - x)
        x = kPi - x;
    }

    // 3. Calculate lookup table index and fractional part
    int64_t idx_scaled = Primitives::Fixed64Mul(x, kLutInterval, kOutputFractionBits);
    int idx = static_cast<int>(idx_scaled >> kOutputFractionBits);
    int64_t t = idx_scaled & ((1LL << kOutputFractionBits) - 1);  // Fractional part [0,1)

    // 4. Clamp index to valid range
    if (idx < 0) {
        idx = 0;
        t = 0;
    } else if (idx >= static_cast<int>(kSinLut.size()) - 1) {
        idx = static_cast<int>(kSinLut.size()) - 2;
        t = kOne - 1;  // Just under 1.0
    }

    // 5. Get points from table
    int64_t p0 = kSinLut[idx];      // Point at left endpoint
    int64_t p1 = kSinLut[idx + 1];  // Point at right endpoint

    // 6. Compute derivatives using the fact that sin'(x) = cos(x)
    // We can use the identity cos(x) = sin(x + pi/2)
    // For the first quadrant, we can use cos(x) = sin(pi/2 - x) when x is in [0,pi/2]
    int cos_idx = static_cast<int>(kSinLut.size()) - 1 - idx;
    int64_t m0 = kSinLut[cos_idx];  // Derivative (cos) at left endpoint
    int64_t m1 = cos_idx > 0 ? kSinLut[cos_idx - 1] : 0;  // Derivative at right endpoint

    // Scale derivatives by step size
    constexpr int64_t kStepSize = Primitives::Fixed64Div(
        kPiOver2, (kSinLut.size() - 1) << kOutputFractionBits, kOutputFractionBits);
    m0 = Primitives::Fixed64Mul(m0, kStepSize, kOutputFractionBits);
    m1 = Primitives::Fixed64Mul(m1, kStepSize, kOutputFractionBits);

    // 7. Compute optimized Hermite coefficients
    // p(t) = ((a*t + b)*t + c)*t + d  (Horner's method)
    // where:
    // a = 2(p₀-p₁) + m₀+m₁
    // b = 3(p₁-p₀) - 2m₀-m₁
    // c = m₀
    // d = p₀
    int64_t p0_minus_p1 = p0 - p1;
    int64_t a = p0_minus_p1 * 2 + m0 + m1;
    int64_t b = -p0_minus_p1 * 3 - m0 * 2 - m1;
    int64_t c = m0;
    int64_t d = p0;

    // 8. Compute interpolation using Horner's method
    int64_t result =
        d
        + Primitives::Fixed64Mul(
            t,
            c
                + Primitives::Fixed64Mul(
                    t, b + Primitives::Fixed64Mul(t, a, kOutputFractionBits), kOutputFractionBits),
            kOutputFractionBits);

    // 9. Apply sign flip if necessary
    if (flip_sign) {
        result = -result;
    }

    // 10. Convert result back to original input format if needed
    if (input_fraction_bits != kOutputFractionBits) {
        if (input_fraction_bits < kOutputFractionBits) {
            result >>= (kOutputFractionBits - input_fraction_bits);
        } else {
            result <<= (input_fraction_bits - kOutputFractionBits);
        }
    }

    return result;
}

}  // namespace math::fp::detail