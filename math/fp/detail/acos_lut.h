#pragma once

#include <stdint.h>
#include <array>
#include "primitives.h"

// Acos lookup table with 512 entries
// Covers the range [0,1] with values in Q23.40 format
// Generated with mpmath library at 100 digits precision
// Using Chebyshev nodes for optimal approximation accuracy

namespace math::fp::detail {
// Table maps x in [0,1] to acos(x) using Chebyshev nodes distribution
// Values stored in Q23.40 fixed-point format
inline constexpr std::array<int64_t, 512> kAcosLut = {
    0x000001921F8DC9CBLL,  // acos(0.00000235310) = 1.57079397370
    0x000001921E51F6A1LL,  // acos(0.00002117772) = 1.57077514907
    0x000001921BDA5357LL,  // acos(0.00005882627) = 1.57073750052
    0x000001921826E605LL,  // acos(0.00011529732) = 1.57068102947
    0x000001921337B7CCLL,  // acos(0.00019058875) = 1.57060573804
    0x000001920D0CD4D6LL,  // acos(0.00028469772) = 1.57051162907
    0x0000019205A64C5ALL,  // acos(0.00039762069) = 1.57039870609
    0x00000191FD043095LL,  // acos(0.00052935341) = 1.57026697336
    0x00000191F32696D0LL,  // acos(0.00067989091) = 1.57011643583
    0x00000191E80D9757LL,  // acos(0.00084922753) = 1.56994709916
    0x00000191DBB94D7FLL,  // acos(0.00103735690) = 1.56975896971
    0x00000191CE29D7A2LL,  // acos(0.00124427193) = 1.56955205454
    0x00000191BF5F571DLL,  // acos(0.00146996483) = 1.56932636144
    0x00000191AF59F04ELL,  // acos(0.00171442710) = 1.56908189885
    0x000001919E19CA96LL,  // acos(0.00197764955) = 1.56881867596
    0x000001918B9F1051LL,  // acos(0.00225962225) = 1.56853670262
    0x0000019177E9EEDCLL,  // acos(0.00256033460) = 1.56823598939
    0x0000019162FA968BLL,  // acos(0.00287977527) = 1.56791654754
    0x000001914CD13AADLL,  // acos(0.00321793224) = 1.56757838900
    0x00000191356E1185LL,  // acos(0.00357479277) = 1.56722152641
    0x000001911CD1544CLL,  // acos(0.00395034343) = 1.56684597309
    0x0000019102FB3F29LL,  // acos(0.00434457008) = 1.56645174305
    0x00000190E7EC1135LL,  // acos(0.00475745787) = 1.56603885098
    0x00000190CBA40C73LL,  // acos(0.00518899127) = 1.56560731224
    0x00000190AE2375CCLL,  // acos(0.00563915402) = 1.56515714289
    0x000001908F6A9514LL,  // acos(0.00610792918) = 1.56468835964
    0x000001906F79B4FCLL,  // acos(0.00659529909) = 1.56420097989
    0x000001904E512318LL,  // acos(0.00710124542) = 1.56369502169
    0x000001902BF12FD4LL,  // acos(0.00762574910) = 1.56317050379
    0x00000190085A2E76LL,  // acos(0.00816879039) = 1.56262744555
    0x0000018FE38C7519LL,  // acos(0.00873034886) = 1.56206586703
    0x0000018FBD885CA6LL,  // acos(0.00931040334) = 1.56148578894
    0x0000018F964E40D5LL,  // acos(0.00990893202) = 1.56088723262
    0x0000018F6DDE8025LL,  // acos(0.01052591234) = 1.56027022008
    0x0000018F44397BD9LL,  // acos(0.01116132109) = 1.55963477396
    0x0000018F195F97F5LL,  // acos(0.01181513433) = 1.55898091755
    0x0000018EED513B3ALL,  // acos(0.01248732747) = 1.55830867477
    0x0000018EC00ECF1CLL,  // acos(0.01317787517) = 1.55761807019
    0x0000018E9198BFC6LL,  // acos(0.01388675146) = 1.55690912897
    0x0000018E61EF7C0FLL,  // acos(0.01461392964) = 1.55618187693
    0x0000018E31137577LL,  // acos(0.01535938232) = 1.55543634050
    0x0000018DFF052023LL,  // acos(0.01612308145) = 1.55467254672
    0x0000018DCBC4F2D8LL,  // acos(0.01690499828) = 1.55389052323
    0x0000018D975366F3LL,  // acos(0.01770510336) = 1.55309029830
    0x0000018D61B0F868LL,  // acos(0.01852336656) = 1.55227190079
    0x0000018D2ADE25BALL,  // acos(0.01935975709) = 1.55143536016
    0x0000018CF2DB6FF7LL,  // acos(0.02021424346) = 1.55058070644
    0x0000018CB9A95AB2LL,  // acos(0.02108679349) = 1.54970797028
    0x0000018C7F486BFDLL,  // acos(0.02197737433) = 1.54881718289
    0x0000018C43B92C63LL,  // acos(0.02288595245) = 1.54790837606
    0x0000018C06FC26E5LL,  // acos(0.02381249364) = 1.54698158216
    0x0000018BC911E8F3LL,  // acos(0.02475696303) = 1.54603683412
    0x0000018B89FB0262LL,  // acos(0.02571932504) = 1.54507416542
    0x0000018B49B8056ELL,  // acos(0.02669954346) = 1.54409361012
    0x0000018B084986ACLL,  // acos(0.02769758137) = 1.54309520281
    0x0000018AC5B01D0BLL,  // acos(0.02871340120) = 1.54207897863
    0x0000018A81EC61C8LL,  // acos(0.02974696470) = 1.54104497325
    0x0000018A3CFEF06ALL,  // acos(0.03079823297) = 1.53999322290
    0x00000189F6E866BELL,  // acos(0.03186716641) = 1.53892376431
    0x00000189AFA964CELL,  // acos(0.03295372480) = 1.53783663474
    0x0000018967428CDBLL,  // acos(0.03405786721) = 1.53673187198
    0x000001891DB48356LL,  // acos(0.03517955208) = 1.53560951430
    0x00000188D2FFEEDBLL,  // acos(0.03631873717) = 1.53446960050
    0x000001888725782CLL,  // acos(0.03747537961) = 1.53331216988
    0x000001883A25CA24LL,  // acos(0.03864943583) = 1.53213726220
    0x00000187EC0191B8LL,  // acos(0.03984086165) = 1.53094491775
    0x000001879CB97DECLL,  // acos(0.04104961219) = 1.52973517727
    0x000001874C4E3FCCLL,  // acos(0.04227564196) = 1.52850808199
    0x00000186FAC08A67LL,  // acos(0.04351890479) = 1.52726367358
    0x00000186A81112C8LL,  // acos(0.04477935387) = 1.52600199421
    0x0000018654408FEELL,  // acos(0.04605694176) = 1.52472308649
    0x00000185FF4FBAC7LL,  // acos(0.04735162034) = 1.52342699347
    0x00000185A93F4E25LL,  // acos(0.04866334088) = 1.52211375864
    0x00000185521006BDLL,  // acos(0.04999205399) = 1.52078342595
    0x00000184F9C2A31BLL,  // acos(0.05133770965) = 1.51943603975
    0x00000184A057E39FLL,  // acos(0.05270025718) = 1.51807164485
    0x0000018445D08A70LL,  // acos(0.05407964530) = 1.51669028644
    0x00000183EA2D5B7CLL,  // acos(0.05547582207) = 1.51529201015
    0x000001838D6F1C6DLL,  // acos(0.05688873493) = 1.51387686199
    0x000001832F9694A2LL,  // acos(0.05831833067) = 1.51244488839
    0x00000182D0A48D29LL,  // acos(0.05976455547) = 1.51099613615
    0x000001827099D0B7LL,  // acos(0.06122735490) = 1.50953065248
    0x000001820F772BA1LL,  // acos(0.06270667386) = 1.50804848495
    0x00000181AD3D6BD5LL,  // acos(0.06420245667) = 1.50654968150
    0x0000018149ED60D4LL,  // acos(0.06571464701) = 1.50503429045
    0x00000180E587DBA8LL,  // acos(0.06724318795) = 1.50350236047
    0x00000180800DAEE1LL,  // acos(0.06878802194) = 1.50195394058
    0x00000180197FAE88LL,  // acos(0.07034909082) = 1.50038908015
    0x0000017FB1DEB01DLL,  // acos(0.07192633581) = 1.49880782890
    0x0000017F492B8A90LL,  // acos(0.07351969753) = 1.49721023686
    0x0000017EDF671634LL,  // acos(0.07512911600) = 1.49559635441
    0x0000017E74922CBFLL,  // acos(0.07675453061) = 1.49396623223
    0x0000017E08ADA93DLL,  // acos(0.07839588018) = 1.49231992132
    0x0000017D9BBA680ELL,  // acos(0.08005310290) = 1.49065747300
    0x0000017D2DB946D9LL,  // acos(0.08172613639) = 1.48897893886
    0x0000017CBEAB248BLL,  // acos(0.08341491765) = 1.48728437083
    0x0000017C4E90E14DLL,  // acos(0.08511938310) = 1.48557382107
    0x0000017BDD6B5E7BLL,  // acos(0.08683946858) = 1.48384734208
    0x0000017B6B3B7E9FLL,  // acos(0.08857510931) = 1.48210498659
    0x0000017AF802256DLL,  // acos(0.09032623996) = 1.48034680761
    0x0000017A83C037B6LL,  // acos(0.09209279460) = 1.47857285843
    0x0000017A0E769B63LL,  // acos(0.09387470671) = 1.47678319257
    0x0000017998263772LL,  // acos(0.09567190921) = 1.47497786382
    0x0000017920CFF3E9LL,  // acos(0.09748433443) = 1.47315692620
    0x00000178A874B9D4LL,  // acos(0.09931191414) = 1.47132043397
    0x000001782F15733BLL,  // acos(0.10115457953) = 1.46946844161
    0x00000177B4B30B1CLL,  // acos(0.10301226122) = 1.46760100385
    0x00000177394E6D65LL,  // acos(0.10488488928) = 1.46571817561
    0x00000176BCE886ECLL,  // acos(0.10677239320) = 1.46382001204
    0x000001763F824569LL,  // acos(0.10867470192) = 1.46190656848
    0x00000175C11C976FLL,  // acos(0.11059174381) = 1.45997790048
    0x0000017541B86C65LL,  // acos(0.11252344670) = 1.45803406378
    0x00000174C156B481LL,  // acos(0.11446973787) = 1.45607511432
    0x000001743FF860BELL,  // acos(0.11643054403) = 1.45410110819
    0x00000173BD9E62D9LL,  // acos(0.11840579137) = 1.45211210168
    0x000001733A49AD49LL,  // acos(0.12039540551) = 1.45010815125
    0x00000172B5FB3337LL,  // acos(0.12239931155) = 1.44808931351
    0x0000017230B3E87ALL,  // acos(0.12441743405) = 1.44605564523
    0x00000171AA74C190LL,  // acos(0.12644969701) = 1.44400720335
    0x00000171233EB396LL,  // acos(0.12849602393) = 1.44194404492
    0x000001709B12B444LL,  // acos(0.13055633777) = 1.43986622716
    0x0000017011F1B9E5LL,  // acos(0.13263056095) = 1.43777380742
    0x0000016F87DCBB51LL,  // acos(0.13471861539) = 1.43566684316
    0x0000016EFCD4AFE9LL,  // acos(0.13682042246) = 1.43354539199
    0x0000016E70DA8F8CLL,  // acos(0.13893590304) = 1.43140951161
    0x0000016DE3EF5298LL,  // acos(0.14106497747) = 1.42925925986
    0x0000016D5613F1DDLL,  // acos(0.14320756561) = 1.42709469466
    0x0000016CC749669CLL,  // acos(0.14536358678) = 1.42491587405
    0x0000016C3790AA7CLL,  // acos(0.14753295981) = 1.42272285616
    0x0000016BA6EAB78CLL,  // acos(0.14971560303) = 1.42051569921
    0x0000016B15588834LL,  // acos(0.15191143425) = 1.41829446149
    0x0000016A82DB1737LL,  // acos(0.15412037082) = 1.41605920140
    0x00000169EF735FA9LL,  // acos(0.15634232955) = 1.41380997739
    0x000001695B225CE9LL,  // acos(0.15857722681) = 1.41154684800
    0x00000168C5E90A9FLL,  // acos(0.16082497844) = 1.40926987180
    0x000001682FC864B3LL,  // acos(0.16308549981) = 1.40697910746
    0x0000016798C1674ALL,  // acos(0.16535870583) = 1.40467461368
    0x0000016700D50EBELL,  // acos(0.16764451090) = 1.40235644922
    0x000001666804579CLL,  // acos(0.16994282897) = 1.40002467288
    0x00000165CE503E9ALL,  // acos(0.17225357350) = 1.39767934349
    0x0000016533B9C098LL,  // acos(0.17457665750) = 1.39532051994
    0x000001649841DA94LL,  // acos(0.17691199351) = 1.39294826113
    0x00000163FBE989ACLL,  // acos(0.17925949360) = 1.39056262599
    0x000001635EB1CB13LL,  // acos(0.18161906938) = 1.38816367348
    0x00000162C09B9C0FLL,  // acos(0.18399063203) = 1.38575146256
    0x0000016221A7F9F2LL,  // acos(0.18637409225) = 1.38332605221
    0x0000016181D7E219LL,  // acos(0.18876936031) = 1.38088750143
    0x00000160E12C51E3LL,  // acos(0.19117634603) = 1.37843586921
    0x000001603FA646AFLL,  // acos(0.19359495879) = 1.37597121454
    0x0000015F9D46BDD6LL,  // acos(0.19602510752) = 1.37349359641
    0x0000015EFA0EB4A5LL,  // acos(0.19846670073) = 1.37100307379
    0x0000015E55FF285DLL,  // acos(0.20091964650) = 1.36849970565
    0x0000015DB119162BLL,  // acos(0.20338385248) = 1.36598355094
    0x0000015D0B5D7B23LL,  // acos(0.20585922589) = 1.36345466858
    0x0000015C64CD543ELL,  // acos(0.20834567353) = 1.36091311747
    0x0000015BBD699E53LL,  // acos(0.21084310179) = 1.35835895648
    0x0000015B15335618LL,  // acos(0.21335141665) = 1.35579224445
    0x0000015A6C2B7816LL,  // acos(0.21587052366) = 1.35321304018
    0x00000159C25300ABLL,  // acos(0.21840032799) = 1.35062140242
    0x0000015917AAEC04LL,  // acos(0.22094073439) = 1.34801738989
    0x000001586C34361ALL,  // acos(0.22349164721) = 1.34540106126
    0x00000157BFEFDAABLL,  // acos(0.22605297041) = 1.34277247513
    0x0000015712DED53ALL,  // acos(0.22862460757) = 1.34013169008
    0x0000015665022108LL,  // acos(0.23120646185) = 1.33747876460
    0x00000155B65AB913LL,  // acos(0.23379843606) = 1.33481375712
    0x0000015506E99811LL,  // acos(0.23640043261) = 1.33213672602
    0x0000015456AFB86BLL,  // acos(0.23901235353) = 1.32944772961
    0x00000153A5AE143CLL,  // acos(0.24163410049) = 1.32674682611
    0x00000152F3E5A54CLL,  // acos(0.24426557478) = 1.32403407369
    0x000001524157650DLL,  // acos(0.24690667733) = 1.32130953042
    0x000001518E044C98LL,  // acos(0.24955730869) = 1.31857325430
    0x00000150D9ED54A9LL,  // acos(0.25221736909) = 1.31582530324
    0x000001502513759ALL,  // acos(0.25488675836) = 1.31306573507
    0x0000014F6F77A766LL,  // acos(0.25756537600) = 1.31029460751
    0x0000014EB91AE19ELL,  // acos(0.26025312117) = 1.30751197823
    0x0000014E01FE1B6ALL,  // acos(0.26294989267) = 1.30471790475
    0x0000014D4A224B87LL,  // acos(0.26565558898) = 1.30191244453
    0x0000014C91886842LL,  // acos(0.26837010822) = 1.29909565492
    0x0000014BD8316775LL,  // acos(0.27109334820) = 1.29626759315
    0x0000014B1E1E3E85LL,  // acos(0.27382520638) = 1.29342831637
    0x0000014A634FE261LL,  // acos(0.27656557992) = 1.29057788159
    0x00000149A7C7477ALL,  // acos(0.27931436563) = 1.28771634574
    0x00000148EB8561C5LL,  // acos(0.28207146004) = 1.28484376561
    0x000001482E8B24B9LL,  // acos(0.28483675933) = 1.28196019789
    0x0000014770D98348LL,  // acos(0.28761015940) = 1.27906569915
    0x00000146B2716FDFLL,  // acos(0.29039155582) = 1.27616032583
    0x00000145F353DC65LL,  // acos(0.29318084388) = 1.27324413424
    0x000001453381BA35LL,  // acos(0.29597791857) = 1.27031718060
    0x0000014472FBFA21LL,  // acos(0.29878267457) = 1.26737952096
    0x00000143B1C38C69LL,  // acos(0.30159500629) = 1.26443121126
    0x00000142EFD960BELL,  // acos(0.30441480785) = 1.26147230732
    0x000001422D3E663DLL,  // acos(0.30724197308) = 1.25850286480
    0x0000014169F38B70LL,  // acos(0.31007639554) = 1.25552293925
    0x00000140A5F9BE47LL,  // acos(0.31291796851) = 1.25253258605
    0x0000013FE151EC1BLL,  // acos(0.31576658502) = 1.24953186049
    0x0000013F1BFD01A8LL,  // acos(0.31862213782) = 1.24652081767
    0x0000013E55FBEB0FLL,  // acos(0.32148451938) = 1.24349951257
    0x0000013D8F4F93CFLL,  // acos(0.32435362196) = 1.24046800002
    0x0000013CC7F8E6CALL,  // acos(0.32722933752) = 1.23742633471
    0x0000013BFFF8CE3BLL,  // acos(0.33011155780) = 1.23437457118
    0x0000013B375033BDLL,  // acos(0.33300017428) = 1.23131276382
    0x0000013A6E000042LL,  // acos(0.33589507821) = 1.22824096686
    0x00000139A4091C14LL,  // acos(0.33879616060) = 1.22515923439
    0x00000138D96C6ED7LL,  // acos(0.34170331222) = 1.22206762034
    0x000001380E2ADF80LL,  // acos(0.34461642363) = 1.21896617848
    0x000001374245545BLL,  // acos(0.34753538513) = 1.21585496244
    0x0000013675BCB304LL,  // acos(0.35046008685) = 1.21273402567
    0x00000135A891E069LL,  // acos(0.35339041865) = 1.20960342149
    0x00000134DAC5C0C7LL,  // acos(0.35632627023) = 1.20646320302
    0x000001340C5937AALL,  // acos(0.35926753104) = 1.20331342324
    0x000001333D4D27E8LL,  // acos(0.36221409034) = 1.20015413498
    0x000001326DA273A7LL,  // acos(0.36516583721) = 1.19698539089
    0x000001319D59FC54LL,  // acos(0.36812266051) = 1.19380724345
    0x00000130CC74A2A5LL,  // acos(0.37108444892) = 1.19061974498
    0x0000012FFAF3469BLL,  // acos(0.37405109092) = 1.18742294763
    0x0000012F28D6C77CLL,  // acos(0.37702247483) = 1.18421690340
    0x0000012E562003D4LL,  // acos(0.37999848878) = 1.18100166410
    0x0000012D82CFD975LL,  // acos(0.38297902071) = 1.17777728137
    0x0000012CAEE72574LL,  // acos(0.38596395841) = 1.17454380669
    0x0000012BDA66C429LL,  // acos(0.38895318951) = 1.17130129136
    0x0000012B054F9130LL,  // acos(0.39194660146) = 1.16804978652
    0x0000012A2FA26766LL,  // acos(0.39494408156) = 1.16478934311
    0x00000129596020E6LL,  // acos(0.39794551695) = 1.16152001193
    0x000001288289970ELL,  // acos(0.40095079464) = 1.15824184358
    0x00000127AB1FA27ALL,  // acos(0.40395980148) = 1.15495488850
    0x00000126D3231B04LL,  // acos(0.40697242417) = 1.15165919695
    0x00000125FA94D7C4LL,  // acos(0.40998854930) = 1.14835481899
    0x000001252175AF11LL,  // acos(0.41300806331) = 1.14504180454
    0x0000012447C6767BLL,  // acos(0.41603085251) = 1.14172020333
    0x000001236D8802D0LL,  // acos(0.41905680311) = 1.13839006489
    0x0000012292BB281ALL,  // acos(0.42208580117) = 1.13505143861
    0x00000121B760B99ELL,  // acos(0.42511773266) = 1.13170437366
    0x00000120DB7989DALL,  // acos(0.42815248342) = 1.12834891906
    0x0000011FFF066A87LL,  // acos(0.43118993921) = 1.12498512364
    0x0000011F22082C97LL,  // acos(0.43422998565) = 1.12161303605
    0x0000011E447FA038LL,  // acos(0.43727250829) = 1.11823270475
    0x0000011D666D94CCLL,  // acos(0.44031739259) = 1.11484417804
    0x0000011C87D2D8F3LL,  // acos(0.44336452391) = 1.11144750401
    0x0000011BA8B03A82LL,  // acos(0.44641378752) = 1.10804273060
    0x0000011AC9068687LL,  // acos(0.44946506862) = 1.10462990555
    0x00000119E8D68948LL,  // acos(0.45251825234) = 1.10120907642
    0x0000011908210E43LL,  // acos(0.45557322371) = 1.09778029059
    0x0000011826E6E02DLL,  // acos(0.45862986773) = 1.09434359525
    0x000001174528C8F3LL,  // acos(0.46168806930) = 1.09089903742
    0x0000011662E791B9LL,  // acos(0.46474771331) = 1.08744666393
    0x00000115802402D9LL,  // acos(0.46780868454) = 1.08398652143
    0x000001149CDEE3E6LL,  // acos(0.47087086775) = 1.08051865639
    0x00000113B918FBAALL,  // acos(0.47393414766) = 1.07704311508
    0x00000112D4D31024LL,  // acos(0.47699840893) = 1.07355994362
    0x00000111F00DE68CLL,  // acos(0.48006353621) = 1.07006918791
    0x000001110ACA4351LL,  // acos(0.48312941407) = 1.06657089370
    0x000001102508EA18LL,  // acos(0.48619592711) = 1.06306510654
    0x0000010F3ECA9DBFLL,  // acos(0.48926295986) = 1.05955187179
    0x0000010E58102059LL,  // acos(0.49233039686) = 1.05603123464
    0x0000010D70DA3332LL,  // acos(0.49539812261) = 1.05250324011
    0x0000010C892996CELL,  // acos(0.49846602162) = 1.04896793300
    0x0000010BA0FF0AE7LL,  // acos(0.50153397838) = 1.04542535797
    0x0000010AB85B4E71LL,  // acos(0.50460187739) = 1.04187555947
    0x00000109CF3F1F97LL,  // acos(0.50766960314) = 1.03831858178
    0x00000108E5AB3BBCLL,  // acos(0.51073704014) = 1.03475446900
    0x00000107FBA05F7CLL,  // acos(0.51380407289) = 1.03118326503
    0x00000107111F46ADLL,  // acos(0.51687058593) = 1.02760501361
    0x000001062628AC5CLL,  // acos(0.51993646379) = 1.02401975830
    0x000001053ABD4AD2LL,  // acos(0.52300159107) = 1.02042754246
    0x000001044EDDDB8FLL,  // acos(0.52606585234) = 1.01682840929
    0x00000103628B1750LL,  // acos(0.52912913225) = 1.01322240180
    0x0000010275C5B609LL,  // acos(0.53219131546) = 1.00960956282
    0x00000101888E6EEDLL,  // acos(0.53525228669) = 1.00598993500
    0x000001009AE5F867LL,  // acos(0.53831193070) = 1.00236356082
    0x000000FFACCD081ELL,  // acos(0.54137013227) = 0.99873048256
    0x000000FEBE4452F7LL,  // acos(0.54442677629) = 0.99509074236
    0x000000FDCF4C8D12LL,  // acos(0.54748174766) = 0.99144438213
    0x000000FCDFE669CBLL,  // acos(0.55053493138) = 0.98779144366
    0x000000FBF0129BBDLL,  // acos(0.55358621248) = 0.98413196852
    0x000000FAFFD1D4C1LL,  // acos(0.55663547609) = 0.98046599812
    0x000000FA0F24C5EDLL,  // acos(0.55968260741) = 0.97679357369
    0x000000F91E0C1F98LL,  // acos(0.56272749171) = 0.97311473628
    0x000000F82C889155LL,  // acos(0.56577001435) = 0.96942952679
    0x000000F73A9AC9FALL,  // acos(0.56881006079) = 0.96573798591
    0x000000F64843779CLL,  // acos(0.57184751658) = 0.96204015417
    0x000000F555834791LL,  // acos(0.57488226734) = 0.95833607194
    0x000000F4625AE673LL,  // acos(0.57791419883) = 0.95462577940
    0x000000F36ECB001ALL,  // acos(0.58094319689) = 0.95090931656
    0x000000F27AD43FA3LL,  // acos(0.58396914749) = 0.94718672327
    0x000000F186774F70LL,  // acos(0.58699193669) = 0.94345803918
    0x000000F091B4D923LL,  // acos(0.59001145070) = 0.93972330381
    0x000000EF9C8D85A8LL,  // acos(0.59302757583) = 0.93598255647
    0x000000EEA701FD2ALL,  // acos(0.59604019852) = 0.93223583632
    0x000000EDB112E71FLL,  // acos(0.59904920536) = 0.92848318236
    0x000000ECBAC0EA41LL,  // acos(0.60205448305) = 0.92472463340
    0x000000EBC40CAC93LL,  // acos(0.60505591844) = 0.92096022809
    0x000000EACCF6D35DLL,  // acos(0.60805339854) = 0.91719000492
    0x000000E9D5800333LL,  // acos(0.61104681049) = 0.91341400221
    0x000000E8DDA8DFF0LL,  // acos(0.61403604159) = 0.90963225810
    0x000000E7E5720CBALL,  // acos(0.61702097929) = 0.90584481059
    0x000000E6ECDC2C02LL,  // acos(0.62000151122) = 0.90205169749
    0x000000E5F3E7DF83LL,  // acos(0.62297752517) = 0.89825295646
    0x000000E4FA95C847LL,  // acos(0.62594890908) = 0.89444862499
    0x000000E400E686A0LL,  // acos(0.62891555108) = 0.89063874041
    0x000000E306DABA34LL,  // acos(0.63187733949) = 0.88682333990
    0x000000E20C7301F2LL,  // acos(0.63483416279) = 0.88300246046
    0x000000E111AFFC1BLL,  // acos(0.63778590966) = 0.87917613893
    0x000000E016924640LL,  // acos(0.64073246896) = 0.87534441199
    0x000000DF1B1A7D41LL,  // acos(0.64367372977) = 0.87150731619
    0x000000DE1F493D51LL,  // acos(0.64660958135) = 0.86766488788
    0x000000DD231F21F5LL,  // acos(0.64953991315) = 0.86381716327
    0x000000DC269CC605LL,  // acos(0.65246461487) = 0.85996417841
    0x000000DB29C2C3ACLL,  // acos(0.65538357637) = 0.85610596921
    0x000000DA2C91B46CLL,  // acos(0.65829668778) = 0.85224257140
    0x000000D92F0A311ALL,  // acos(0.66120383940) = 0.84837402057
    0x000000D8312CD1E3LL,  // acos(0.66410492179) = 0.84450035214
    0x000000D732FA2E4ALL,  // acos(0.66699982572) = 0.84062160139
    0x000000D63472DD2BLL,  // acos(0.66988844220) = 0.83673780346
    0x000000D5359774BALL,  // acos(0.67277066248) = 0.83284899330
    0x000000D436688A85LL,  // acos(0.67564637804) = 0.82895520574
    0x000000D336E6B375LL,  // acos(0.67851548062) = 0.82505647546
    0x000000D2371283CELL,  // acos(0.68137786218) = 0.82115283697
    0x000000D136EC8F2FLL,  // acos(0.68423341498) = 0.81724432464
    0x000000D036756896LL,  // acos(0.68708203149) = 0.81333097270
    0x000000CF35ADA25ELL,  // acos(0.68992360446) = 0.80941281523
    0x000000CE3495CE40LL,  // acos(0.69275802692) = 0.80548988614
    0x000000CD332E7D55LL,  // acos(0.69558519215) = 0.80156221924
    0x000000CC31784019LL,  // acos(0.69840499371) = 0.79762984815
    0x000000CB2F73A666LL,  // acos(0.70121732543) = 0.79369280636
    0x000000CA2D213F79LL,  // acos(0.70402208143) = 0.78975112724
    0x000000C92A8199F4LL,  // acos(0.70681915612) = 0.78580484399
    0x000000C8279543DBLL,  // acos(0.70960844418) = 0.78185398966
    0x000000C7245CCA97LL,  // acos(0.71238984060) = 0.77789859720
    0x000000C620D8BAF8LL,  // acos(0.71516324067) = 0.77393869939
    0x000000C51D09A134LL,  // acos(0.71792853996) = 0.76997432886
    0x000000C418F008E8LL,  // acos(0.72068563437) = 0.76600551813
    0x000000C3148C7D1BLL,  // acos(0.72343442008) = 0.76203229956
    0x000000C20FDF883CLL,  // acos(0.72617479362) = 0.75805470539
    0x000000C10AE9B425LL,  // acos(0.72890665180) = 0.75407276772
    0x000000C005AB8A1ALL,  // acos(0.73162989178) = 0.75008651849
    0x000000BF002592CDLL,  // acos(0.73434441102) = 0.74609598955
    0x000000BDFA58565BLL,  // acos(0.73705010733) = 0.74210121258
    0x000000BCF4445C50LL,  // acos(0.73974687883) = 0.73810221914
    0x000000BBEDEA2BA7LL,  // acos(0.74243462400) = 0.73409904066
    0x000000BAE74A4AC9LL,  // acos(0.74511324164) = 0.73009170843
    0x000000B9E0653F92LL,  // acos(0.74778263091) = 0.72608025362
    0x000000B8D93B8F4DLL,  // acos(0.75044269131) = 0.72206470727
    0x000000B7D1CDBEBALL,  // acos(0.75309332267) = 0.71804510027
    0x000000B6CA1C520ALL,  // acos(0.75573442522) = 0.71402146342
    0x000000B5C227CCE3LL,  // acos(0.75836589951) = 0.70999382736
    0x000000B4B9F0B262LL,  // acos(0.76098764647) = 0.70596222262
    0x000000B3B1778517LL,  // acos(0.76359956739) = 0.70192667960
    0x000000B2A8BCC70ALL,  // acos(0.76620156394) = 0.69788722858
    0x000000B19FC0F9BDLL,  // acos(0.76879353815) = 0.69384389970
    0x000000B096849E29LL,  // acos(0.77137539243) = 0.68979672300
    0x000000AF8D0834BFLL,  // acos(0.77394702959) = 0.68574572838
    0x000000AE834C3D6ELL,  // acos(0.77650835279) = 0.68169094562
    0x000000AD7951379FLL,  // acos(0.77905926561) = 0.67763240440
    0x000000AC6F17A238LL,  // acos(0.78159967201) = 0.67357013426
    0x000000AB649FFB9ALL,  // acos(0.78412947634) = 0.66950416463
    0x000000AA59EAC1A8LL,  // acos(0.78664858335) = 0.66543452480
    0x000000A94EF871C2LL,  // acos(0.78915689821) = 0.66136124399
    0x000000A843C988C9LL,  // acos(0.79165432647) = 0.65728435125
    0x000000A7385E831FLL,  // acos(0.79414077411) = 0.65320387555
    0x000000A62CB7DCA6LL,  // acos(0.79661614752) = 0.64911984574
    0x000000A520D610C6LL,  // acos(0.79908035350) = 0.64503229055
    0x000000A414B99A69LL,  // acos(0.80153329927) = 0.64094123859
    0x000000A30862F3FFLL,  // acos(0.80397489248) = 0.63684671838
    0x000000A1FBD2977BLL,  // acos(0.80640504121) = 0.63274875830
    0x000000A0EF08FE5ALL,  // acos(0.80882365397) = 0.62864738664
    0x0000009FE206A19DLL,  // acos(0.81123063969) = 0.62454263159
    0x0000009ED4CBF9D1LL,  // acos(0.81362590775) = 0.62043452119
    0x0000009DC7597F0ALL,  // acos(0.81600936797) = 0.61632308342
    0x0000009CB9AFA8E6LL,  // acos(0.81838093062) = 0.61220834611
    0x0000009BABCEEE8FLL,  // acos(0.82074050640) = 0.60809033703
    0x0000009A9DB7C6BCLL,  // acos(0.82308800649) = 0.60396908380
    0x000000998F6AA7AELL,  // acos(0.82542334250) = 0.59984461397
    0x0000009880E80736LL,  // acos(0.82774642650) = 0.59571695496
    0x0000009772305AB4LL,  // acos(0.83005717103) = 0.59158613409
    0x0000009663441717LL,  // acos(0.83235548910) = 0.58745217861
    0x000000955423B0DDLL,  // acos(0.83464129417) = 0.58331511562
    0x0000009444CF9C19LL,  // acos(0.83691450019) = 0.57917497216
    0x0000009335484C6ELL,  // acos(0.83917502156) = 0.57503177515
    0x00000092258E3511LL,  // acos(0.84142277319) = 0.57088555141
    0x0000009115A1C8CFLL,  // acos(0.84365767045) = 0.56673632767
    0x0000009005837A06LL,  // acos(0.84587962918) = 0.56258413057
    0x0000008EF533BAADLL,  // acos(0.84808856575) = 0.55842898662
    0x0000008DE4B2FC50LL,  // acos(0.85028439697) = 0.55427092228
    0x0000008CD401B014LL,  // acos(0.85246704019) = 0.55010996388
    0x0000008BC32046B6LL,  // acos(0.85463641322) = 0.54594613768
    0x0000008AB20F308CLL,  // acos(0.85679243439) = 0.54177946983
    0x00000089A0CEDD87LL,  // acos(0.85893502253) = 0.53760998639
    0x000000888F5FBD34LL,  // acos(0.86106409696) = 0.53343771333
    0x000000877DC23EBCLL,  // acos(0.86317957754) = 0.52926267654
    0x000000866BF6D0E3LL,  // acos(0.86528138461) = 0.52508490181
    0x0000008559FDE20ELL,  // acos(0.86736943905) = 0.52090441483
    0x0000008447D7E03ELL,  // acos(0.86944366223) = 0.51672124123
    0x0000008335853917LL,  // acos(0.87150397607) = 0.51253540653
    0x00000082230659DBLL,  // acos(0.87355030299) = 0.50834693617
    0x00000081105BAF6ELL,  // acos(0.87558256595) = 0.50415585549
    0x0000007FFD85A657LL,  // acos(0.87760068845) = 0.49996218978
    0x0000007EEA84AABFLL,  // acos(0.87960459449) = 0.49576596421
    0x0000007DD7592876LL,  // acos(0.88159420863) = 0.49156720388
    0x0000007CC4038AEELL,  // acos(0.88356945597) = 0.48736593382
    0x0000007BB0843D3FLL,  // acos(0.88553026213) = 0.48316217895
    0x0000007A9CDBAA2ALL,  // acos(0.88747655330) = 0.47895596413
    0x00000079890A3C16LL,  // acos(0.88940825619) = 0.47474731414
    0x0000007875105D12LL,  // acos(0.89132529808) = 0.47053625367
    0x0000007760EE76D8LL,  // acos(0.89322760680) = 0.46632280733
    0x000000764CA4F2CBLL,  // acos(0.89511511072) = 0.46210699966
    0x00000075383439F9LL,  // acos(0.89698773878) = 0.45788885513
    0x00000074239CB51BLL,  // acos(0.89884542047) = 0.45366839811
    0x000000730EDECC9BLL,  // acos(0.90068808586) = 0.44944565292
    0x00000071F9FAE88ALL,  // acos(0.90251566557) = 0.44522064378
    0x00000070E4F170AELL,  // acos(0.90432809079) = 0.44099339486
    0x0000006FCFC2CC78LL,  // acos(0.90612529329) = 0.43676393024
    0x0000006EBA6F630BLL,  // acos(0.90790720540) = 0.43253227394
    0x0000006DA4F79B3ALL,  // acos(0.90967376004) = 0.42829844990
    0x0000006C8F5BDB8BLL,  // acos(0.91142489069) = 0.42406248198
    0x0000006B799C8A36LL,  // acos(0.91316053142) = 0.41982439398
    0x0000006A63BA0D27LL,  // acos(0.91488061690) = 0.41558420964
    0x000000694DB4C9FELL,  // acos(0.91658508235) = 0.41134195262
    0x00000068378D2610LL,  // acos(0.91827386361) = 0.40709764652
    0x0000006721438669LL,  // acos(0.91994689710) = 0.40285131485
    0x000000660AD84FCCLL,  // acos(0.92160411982) = 0.39860298107
    0x00000064F44BE6B1LL,  // acos(0.92324546939) = 0.39435266859
    0x00000063DD9EAF4DLL,  // acos(0.92487088400) = 0.39010040073
    0x00000062C6D10D8ALL,  // acos(0.92648030247) = 0.38584620076
    0x00000061AFE36511LL,  // acos(0.92807366419) = 0.38159009187
    0x0000006098D61941LL,  // acos(0.92965090918) = 0.37733209721
    0x0000005F81A98D39LL,  // acos(0.93121197806) = 0.37307223986
    0x0000005E6A5E23D2LL,  // acos(0.93275681205) = 0.36881054282
    0x0000005D52F43FA4LL,  // acos(0.93428535299) = 0.36454702905
    0x0000005C3B6C4305LL,  // acos(0.93579754333) = 0.36028172146
    0x0000005B23C6900ALL,  // acos(0.93729332614) = 0.35601464287
    0x0000005A0C038889LL,  // acos(0.93877264510) = 0.35174581607
    0x00000058F4238E17LL,  // acos(0.94023544453) = 0.34747526378
    0x00000057DC27020CLL,  // acos(0.94168166933) = 0.34320300865
    0x00000056C40E4582LL,  // acos(0.94311126507) = 0.33892907330
    0x00000055ABD9B956LL,  // acos(0.94452417793) = 0.33465348029
    0x000000549389BE2ALL,  // acos(0.94592035470) = 0.33037625211
    0x000000537B1EB464LL,  // acos(0.94729974282) = 0.32609741120
    0x000000526298FC30LL,  // acos(0.94866229035) = 0.32181697995
    0x0000005149F8F580LL,  // acos(0.95000794601) = 0.31753498071
    0x00000050313F000FLL,  // acos(0.95133665912) = 0.31325143577
    0x0000004F186B7B5DLL,  // acos(0.95264837966) = 0.30896636736
    0x0000004DFF7EC6B6LL,  // acos(0.95394305824) = 0.30467979766
    0x0000004CE679412ELL,  // acos(0.95522064613) = 0.30039174882
    0x0000004BCD5B49A4LL,  // acos(0.95648109521) = 0.29610224293
    0x0000004AB4253EC2LL,  // acos(0.95772435804) = 0.29181130202
    0x000000499AD77EFFLL,  // acos(0.95895038781) = 0.28751894808
    0x000000488172689CLL,  // acos(0.96015913835) = 0.28322520308
    0x0000004767F659ACLL,  // acos(0.96135056417) = 0.27893008890
    0x000000464E63B00ELL,  // acos(0.96252462039) = 0.27463362740
    0x0000004534BAC96FLL,  // acos(0.96368126283) = 0.27033584040
    0x000000441AFC034ELL,  // acos(0.96482044792) = 0.26603674966
    0x000000430127BAFBLL,  // acos(0.96594213279) = 0.26173637691
    0x00000041E73E4D97LL,  // acos(0.96704627520) = 0.25743474383
    0x00000040CD401814LL,  // acos(0.96813283359) = 0.25313187206
    0x0000003FB32D773ALL,  // acos(0.96920176703) = 0.24882778321
    0x0000003E9906C7A2LL,  // acos(0.97025303530) = 0.24452249884
    0x0000003D7ECC65BBLL,  // acos(0.97128659880) = 0.24021604046
    0x0000003C647EADCBLL,  // acos(0.97230241863) = 0.23590842956
    0x0000003B4A1DFBECLL,  // acos(0.97330045654) = 0.23159968758
    0x0000003A2FAAAC10LL,  // acos(0.97428067496) = 0.22728983594
    0x0000003915251A01LL,  // acos(0.97524303697) = 0.22297889600
    0x00000037FA8DA161LL,  // acos(0.97618750636) = 0.21866688910
    0x00000036DFE49DACLL,  // acos(0.97711404755) = 0.21435383653
    0x00000035C52A6A37LL,  // acos(0.97802262567) = 0.21003975957
    0x00000034AA5F6233LL,  // acos(0.97891320651) = 0.20572467945
    0x000000338F83E0ADLL,  // acos(0.97978575654) = 0.20140861736
    0x000000327498408DLL,  // acos(0.98064024291) = 0.19709159447
    0x00000031599CDC9ALL,  // acos(0.98147663344) = 0.19277363191
    0x000000303E920F78LL,  // acos(0.98229489664) = 0.18845475080
    0x0000002F237833A9LL,  // acos(0.98309500172) = 0.18413497220
    0x0000002E084FA38FLL,  // acos(0.98387691855) = 0.17981431716
    0x0000002CED18B96ELL,  // acos(0.98464061768) = 0.17549280669
    0x0000002BD1D3CF68LL,  // acos(0.98538607036) = 0.17117046178
    0x0000002AB6813F83LL,  // acos(0.98611324854) = 0.16684730340
    0x000000299B2163A7LL,  // acos(0.98682212483) = 0.16252335246
    0x000000287FB4959ELL,  // acos(0.98751267253) = 0.15819862988
    0x00000027643B2F19LL,  // acos(0.98818486567) = 0.15387315655
    0x0000002648B589AALL,  // acos(0.98883867891) = 0.14954695331
    0x000000252D23FECDLL,  // acos(0.98947408766) = 0.14522004100
    0x000000241186E7E0LL,  // acos(0.99009106798) = 0.14089244042
    0x00000022F5DE9E2ALL,  // acos(0.99068959666) = 0.13656417238
    0x00000021DA2B7ADALL,  // acos(0.99126965114) = 0.13223525762
    0x00000020BE6DD708LL,  // acos(0.99183120961) = 0.12790571689
    0x0000001FA2A60BB5LL,  // acos(0.99237425090) = 0.12357557093
    0x0000001E86D471CALL,  // acos(0.99289875458) = 0.11924484041
    0x0000001D6AF9621ELL,  // acos(0.99340470091) = 0.11491354604
    0x0000001C4F153572LL,  // acos(0.99389207082) = 0.11058170848
    0x0000001B33284473LL,  // acos(0.99436084598) = 0.10624934837
    0x0000001A1732E7BBLL,  // acos(0.99481100873) = 0.10191648634
    0x00000018FB3577D4LL,  // acos(0.99524254213) = 0.09758314300
    0x00000017DF304D34LL,  // acos(0.99565542992) = 0.09324933896
    0x00000016C323C042LL,  // acos(0.99604965657) = 0.08891509479
    0x00000015A7102953LL,  // acos(0.99642520723) = 0.08458043107
    0x000000148AF5E0AFLL,  // acos(0.99678206776) = 0.08024536834
    0x000000136ED53E8FLL,  // acos(0.99712022473) = 0.07590992715
    0x0000001252AE9B1CLL,  // acos(0.99743966540) = 0.07157412803
    0x0000001136824E77LL,  // acos(0.99774037775) = 0.06723799148
    0x000000101A50B0AFLL,  // acos(0.99802235045) = 0.06290153803
    0x0000000EFE1A19CDLL,  // acos(0.99828557290) = 0.05856478815
    0x0000000DE1DEE1CALL,  // acos(0.99853003517) = 0.05422776234
    0x0000000CC59F6099LL,  // acos(0.99875572807) = 0.04989048107
    0x0000000BA95BEE21LL,  // acos(0.99896264310) = 0.04555296482
    0x0000000A8D14E244LL,  // acos(0.99915077247) = 0.04121523403
    0x0000000970CA94D8LL,  // acos(0.99932010909) = 0.03687730917
    0x00000008547D5DAFLL,  // acos(0.99947064659) = 0.03253921067
    0x00000007382D9494LL,  // acos(0.99960237931) = 0.02820095899
    0x000000061BDB914BLL,  // acos(0.99971530228) = 0.02386257455
    0x00000004FF87AB95LL,  // acos(0.99980941125) = 0.01952407779
    0x00000003E3323B2ELL,  // acos(0.99988470268) = 0.01518548913
    0x00000002C6DB97CFLL,  // acos(0.99994117373) = 0.01084682900
    0x00000001AA841930LL,  // acos(0.99997882228) = 0.00650811782
    0x000000008E2C1703LL   // acos(0.99999764690) = 0.00216937601
};

// X values corresponding to the Chebyshev nodes
inline constexpr std::array<int64_t, 512> kAcosXValues = {
    0x0000000000277A77LL,  // 0.00000235310
    0x0000000001634DA1LL,  // 0.00002117772
    0x0000000003DAF0EBLL,  // 0.00005882627
    0x00000000078E5E3CLL,  // 0.00011529732
    0x000000000C7D8C75LL,  // 0.00019058875
    0x0000000012A86F68LL,  // 0.00028469772
    0x000000001A0EF7DCLL,  // 0.00039762069
    0x0000000022B11391LL,  // 0.00052935341
    0x000000002C8EAD39LL,  // 0.00067989091
    0x0000000037A7AC7BLL,  // 0.00084922753
    0x0000000043FBF5F6LL,  // 0.00103735690
    0x00000000518B6B3ELL,  // 0.00124427193
    0x000000006055EADFLL,  // 0.00146996483
    0x00000000705B5058LL,  // 0.00171442710
    0x00000000819B7423LL,  // 0.00197764955
    0x0000000094162BAELL,  // 0.00225962225
    0x00000000A7CB4962LL,  // 0.00256033460
    0x00000000BCBA9C9ELL,  // 0.00287977527
    0x00000000D2E3F1BALL,  // 0.00321793224
    0x00000000EA471209LL,  // 0.00357479277
    0x0000000102E3C3D5LL,  // 0.00395034343
    0x000000011CB9CA65LL,  // 0.00434457008
    0x0000000137C8E5F8LL,  // 0.00475745787
    0x000000015410D3CCLL,  // 0.00518899127
    0x0000000171914E17LL,  // 0.00563915402
    0x00000001904A0C10LL,  // 0.00610792918
    0x00000001B03AC1E9LL,  // 0.00659529909
    0x00000001D16320D2LL,  // 0.00710124542
    0x00000001F3C2D6FCLL,  // 0.00762574910
    0x0000000217598F97LL,  // 0.00816879039
    0x000000023C26F2D2LL,  // 0.00873034886
    0x00000002622AA5DFLL,  // 0.00931040334
    0x0000000289644AF2LL,  // 0.00990893202
    0x00000002B1D38143LL,  // 0.01052591234
    0x00000002DB77E50DLL,  // 0.01116132109
    0x0000000306510F91LL,  // 0.01181513433
    0x00000003325E9715LL,  // 0.01248732747
    0x000000035FA00EE7LL,  // 0.01317787517
    0x000000038E15075ELL,  // 0.01388675146
    0x00000003BDBD0DD9LL,  // 0.01461392964
    0x00000003EE97ACC2LL,  // 0.01535938232
    0x0000000420A46B8DLL,  // 0.01612308145
    0x0000000453E2CEBDLL,  // 0.01690499828
    0x00000004885257E1LL,  // 0.01770510336
    0x00000004BDF28599LL,  // 0.01852336656
    0x00000004F4C2D394LL,  // 0.01935975709
    0x000000052CC2BA91LL,  // 0.02021424346
    0x0000000565F1B066LL,  // 0.02108679349
    0x00000005A04F27FALL,  // 0.02197737433
    0x00000005DBDA914ALL,  // 0.02288595245
    0x000000061893596BLL,  // 0.02381249364
    0x000000065678EA8ALL,  // 0.02475696303
    0x00000006958AABEELL,  // 0.02571932504
    0x00000006D5C801F8LL,  // 0.02669954346
    0x0000000717304E28LL,  // 0.02769758137
    0x0000000759C2EF1BLL,  // 0.02871340120
    0x000000079D7F408ELL,  // 0.02974696470
    0x00000007E2649B5FLL,  // 0.03079823297
    0x0000000828725591LL,  // 0.03186716641
    0x000000086FA7C249LL,  // 0.03295372480
    0x00000008B80431D5LL,  // 0.03405786721
    0x000000090186F1AALL,  // 0.03517955208
    0x000000094C2F4C65LL,  // 0.03631873717
    0x0000000997FC89D3LL,  // 0.03747537961
    0x00000009E4EDEEE9LL,  // 0.03864943583
    0x0000000A3302BDCFLL,  // 0.03984086165
    0x0000000A823A35DDLL,  // 0.04104961219
    0x0000000AD293939ELL,  // 0.04227564196
    0x0000000B240E10D0LL,  // 0.04351890479
    0x0000000B76A8E469LL,  // 0.04477935387
    0x0000000BCA634298LL,  // 0.04605694176
    0x0000000C1F3C5CC6LL,  // 0.04735162034
    0x0000000C75336199LL,  // 0.04866334088
    0x0000000CCC477CF4LL,  // 0.04999205399
    0x0000000D2477D7FCLL,  // 0.05133770965
    0x0000000D7DC39918LL,  // 0.05270025718
    0x0000000DD829E3F5LL,  // 0.05407964530
    0x0000000E33A9D985LL,  // 0.05547582207
    0x0000000E90429804LL,  // 0.05688873493
    0x0000000EEDF33AF8LL,  // 0.05831833067
    0x0000000F4CBADB38LL,  // 0.05976455547
    0x0000000FAC988EE6LL,  // 0.06122735490
    0x000000100D8B6979LL,  // 0.06270667386
    0x000000106F927BBALL,  // 0.06420245667
    0x00000010D2ACD3CBLL,  // 0.06571464701
    0x0000001136D97D24LL,  // 0.06724318795
    0x000000119C17809BLL,  // 0.06878802194
    0x000000120265E461LL,  // 0.07034909082
    0x0000001269C3AC09LL,  // 0.07192633581
    0x00000012D22FD886LL,  // 0.07351969753
    0x000000133BA96832LL,  // 0.07512911600
    0x00000013A62F56CDLL,  // 0.07675453061
    0x0000001411C09D82LL,  // 0.07839588018
    0x000000147E5C32E8LL,  // 0.08005310290
    0x00000014EC010B04LL,  // 0.08172613639
    0x000000155AAE174DLL,  // 0.08341491765
    0x00000015CA6246AELL,  // 0.08511938310
    0x000000163B1C858ALL,  // 0.08683946858
    0x00000016ACDBBDBCLL,  // 0.08857510931
    0x000000171F9ED69BLL,  // 0.09032623996
    0x000000179364B4FDLL,  // 0.09209279460
    0x00000018082C3B3ALL,  // 0.09387470671
    0x000000187DF4492FLL,  // 0.09567190921
    0x00000018F4BBBC3ELL,  // 0.09748433443
    0x000000196C816F53LL,  // 0.09931191414
    0x00000019E5443AEALL,  // 0.10115457953
    0x0000001A5F02F50ALL,  // 0.10301226122
    0x0000001AD9BC714ELL,  // 0.10488488928
    0x0000001B556F80E9LL,  // 0.10677239320
    0x0000001BD21AF2A2LL,  // 0.10867470192
    0x0000001C4FBD92DELL,  // 0.11059174381
    0x0000001CCE562B9ELL,  // 0.11252344670
    0x0000001D4DE38487LL,  // 0.11446973787
    0x0000001DCE6462DFLL,  // 0.11643054403
    0x0000001E4FD78995LL,  // 0.11840579137
    0x0000001ED23BB941LL,  // 0.12039540551
    0x0000001F558FB02ALL,  // 0.12239931155
    0x0000001FD9D22A46LL,  // 0.12441743405
    0x000000205F01E13FLL,  // 0.12644969701
    0x00000020E51D8C74LL,  // 0.12849602393
    0x000000216C23E101LL,  // 0.13055633777
    0x00000021F41391BDLL,  // 0.13263056095
    0x000000227CEB4F3ELL,  // 0.13471861539
    0x0000002306A9C7E1LL,  // 0.13682042246
    0x00000023914DA7C6LL,  // 0.13893590304
    0x000000241CD598DALL,  // 0.14106497747
    0x00000024A94042D5LL,  // 0.14320756561
    0x00000025368C4B40LL,  // 0.14536358678
    0x00000025C4B85579LL,  // 0.14753295981
    0x0000002653C302B5LL,  // 0.14971560303
    0x00000026E3AAF202LL,  // 0.15191143425
    0x00000027746EC04FLL,  // 0.15412037082
    0x00000028060D086ALL,  // 0.15634232955
    0x0000002898846307LL,  // 0.15857722681
    0x000000292BD366C2LL,  // 0.16082497844
    0x00000029BFF8A823LL,  // 0.16308549981
    0x0000002A54F2B9A2LL,  // 0.16535870583
    0x0000002AEAC02BA9LL,  // 0.16764451090
    0x0000002B815F8C99LL,  // 0.16994282897
    0x0000002C18CF68CDLL,  // 0.17225357350
    0x0000002CB10E4A9DLL,  // 0.17457665750
    0x0000002D4A1ABA63LL,  // 0.17691199351
    0x0000002DE3F33E7DLL,  // 0.17925949360
    0x0000002E7E965B53LL,  // 0.18161906938
    0x0000002F1A029356LL,  // 0.18399063203
    0x0000002FB636670BLL,  // 0.18637409225
    0x0000003053305507LL,  // 0.18876936031
    0x00000030F0EED9F8LL,  // 0.19117634603
    0x000000318F7070A7LL,  // 0.19359495879
    0x000000322EB391FALL,  // 0.19602510752
    0x00000032CEB6B4FALL,  // 0.19846670073
    0x000000336F784ED9LL,  // 0.20091964650
    0x0000003410F6D2EFLL,  // 0.20338385248
    0x00000034B330B2C5LL,  // 0.20585922589
    0x0000003556245E14LL,  // 0.20834567353
    0x00000035F9D042CBLL,  // 0.21084310179
    0x000000369E32CD12LL,  // 0.21335141665
    0x00000037434A674FLL,  // 0.21587052366
    0x00000037E9157A2ALL,  // 0.21840032799
    0x000000388F926C8ELL,  // 0.22094073439
    0x0000003936BFA3B2LL,  // 0.22349164721
    0x00000039DE9B8316LL,  // 0.22605297041
    0x0000003A87246C90LL,  // 0.22862460757
    0x0000003B3058C047LL,  // 0.23120646185
    0x0000003BDA36DCBDLL,  // 0.23379843606
    0x0000003C84BD1ED0LL,  // 0.23640043261
    0x0000003D2FE9E1C1LL,  // 0.23901235353
    0x0000003DDBBB7F35LL,  // 0.24163410049
    0x0000003E88304F39LL,  // 0.24426557478
    0x0000003F3546A849LL,  // 0.24690667733
    0x0000003FE2FCDF51LL,  // 0.24955730869
    0x00000040915147B6LL,  // 0.25221736909
    0x0000004140423352LL,  // 0.25488675836
    0x00000041EFCDF280LL,  // 0.25756537600
    0x000000429FF2D41BLL,  // 0.26025312117
    0x0000004350AF2586LL,  // 0.26294989267
    0x00000044020132ADLL,  // 0.26565558898
    0x00000044B3E7460BLL,  // 0.26837010822
    0x00000045665FA8AFLL,  // 0.27109334820
    0x000000461968A23CLL,  // 0.27382520638
    0x00000046CD0078F3LL,  // 0.27656557992
    0x00000047812571B3LL,  // 0.27931436563
    0x0000004835D5D000LL,  // 0.28207146004
    0x00000048EB0FD605LL,  // 0.28483675933
    0x00000049A0D1C499LL,  // 0.28761015940
    0x0000004A5719DB46LL,  // 0.29039155582
    0x0000004B0DE65848LL,  // 0.29318084388
    0x0000004BC5357895LL,  // 0.29597791857
    0x0000004C7D0577E4LL,  // 0.29878267457
    0x0000004D355490A8LL,  // 0.30159500629
    0x0000004DEE20FC21LL,  // 0.30441480785
    0x0000004EA768F254LL,  // 0.30724197308
    0x0000004F612AAA18LL,  // 0.31007639554
    0x000000501B645919LL,  // 0.31291796851
    0x00000050D61433D8LL,  // 0.31576658502
    0x0000005191386DB3LL,  // 0.31862213782
    0x000000524CCF38EBLL,  // 0.32148451938
    0x0000005308D6C6A5LL,  // 0.32435362196
    0x00000053C54D46EELL,  // 0.32722933752
    0x000000548230E8C4LL,  // 0.33011155780
    0x000000553F7FDA17LL,  // 0.33300017428
    0x00000055FD3847CDLL,  // 0.33589507821
    0x00000056BB585DC8LL,  // 0.33879616060
    0x0000005779DE46EDLL,  // 0.34170331222
    0x0000005838C82D22LL,  // 0.34461642363
    0x00000058F8143958LL,  // 0.34753538513
    0x00000059B7C0938ELL,  // 0.35046008685
    0x0000005A77CB62D5LL,  // 0.35339041865
    0x0000005B3832CD55LL,  // 0.35632627023
    0x0000005BF8F4F851LL,  // 0.35926753104
    0x0000005CBA10082ELL,  // 0.36221409034
    0x0000005D7B822072LL,  // 0.36516583721
    0x0000005E3D4963D1LL,  // 0.36812266051
    0x0000005EFF63F429LL,  // 0.37108444892
    0x0000005FC1CFF28CLL,  // 0.37405109092
    0x00000060848B7F42LL,  // 0.37702247483
    0x000000614794B9D2LL,  // 0.37999848878
    0x000000620AE9C0FELL,  // 0.38297902071
    0x00000062CE88B2D3LL,  // 0.38596395841
    0x00000063926FACA2LL,  // 0.38895318951
    0x00000064569CCB0ELL,  // 0.39194660146
    0x000000651B0E2A0CLL,  // 0.39494408156
    0x00000065DFC1E4E7LL,  // 0.39794551695
    0x00000066A4B61649LL,  // 0.40095079464
    0x0000006769E8D83BLL,  // 0.40395980148
    0x000000682F58442DLL,  // 0.40697242417
    0x00000068F50272F7LL,  // 0.40998854930
    0x00000069BAE57CE2LL,  // 0.41300806331
    0x0000006A80FF79ABLL,  // 0.41603085251
    0x0000006B474E8086LL,  // 0.41905680311
    0x0000006C0DD0A824LL,  // 0.42208580117
    0x0000006CD48406BALL,  // 0.42511773266
    0x0000006D9B66B202LL,  // 0.42815248342
    0x0000006E6276BF41LL,  // 0.43118993921
    0x0000006F29B2434DLL,  // 0.43422998565
    0x0000006FF1175290LL,  // 0.43727250829
    0x00000070B8A4010DLL,  // 0.44031739259
    0x0000007180566267LL,  // 0.44336452391
    0x00000072482C89E3LL,  // 0.44641378752
    0x0000007310248A6DLL,  // 0.44946506862
    0x00000073D83C769FLL,  // 0.45251825234
    0x00000074A07260C3LL,  // 0.45557322371
    0x0000007568C45AD9LL,  // 0.45862986773
    0x000000763130769DLL,  // 0.46168806930
    0x00000076F9B4C589LL,  // 0.46474771331
    0x00000077C24F58DCLL,  // 0.46780868454
    0x000000788AFE419FLL,  // 0.47087086775
    0x0000007953BF90A8LL,  // 0.47393414766
    0x0000007A1C91569ELL,  // 0.47699840893
    0x0000007AE571A401LL,  // 0.48006353621
    0x0000007BAE5E892FLL,  // 0.48312941407
    0x0000007C77561663LL,  // 0.48619592711
    0x0000007D40565BC0LL,  // 0.48926295986
    0x0000007E095D6954LL,  // 0.49233039686
    0x0000007ED2694F1ALL,  // 0.49539812261
    0x0000007F9B781D04LL,  // 0.49846602162
    0x000000806487E2FBLL,  // 0.50153397838
    0x000000812D96B0E5LL,  // 0.50460187739
    0x00000081F6A296ABLL,  // 0.50766960314
    0x00000082BFA9A43FLL,  // 0.51073704014
    0x0000008388A9E99CLL,  // 0.51380407289
    0x0000008451A176D0LL,  // 0.51687058593
    0x000000851A8E5BFELL,  // 0.51993646379
    0x00000085E36EA961LL,  // 0.52300159107
    0x00000086AC406F57LL,  // 0.52606585234
    0x000000877501BE60LL,  // 0.52912913225
    0x000000883DB0A723LL,  // 0.53219131546
    0x00000089064B3A76LL,  // 0.53525228669
    0x00000089CECF8962LL,  // 0.53831193070
    0x0000008A973BA526LL,  // 0.54137013227
    0x0000008B5F8D9F3CLL,  // 0.54442677629
    0x0000008C27C38960LL,  // 0.54748174766
    0x0000008CEFDB7592LL,  // 0.55053493138
    0x0000008DB7D3761CLL,  // 0.55358621248
    0x0000008E7FA99D98LL,  // 0.55663547609
    0x0000008F475BFEF2LL,  // 0.55968260741
    0x000000900EE8AD6FLL,  // 0.56272749171
    0x00000090D64DBCB2LL,  // 0.56577001435
    0x000000919D8940BELL,  // 0.56881006079
    0x0000009264994DFDLL,  // 0.57184751658
    0x000000932B7BF945LL,  // 0.57488226734
    0x00000093F22F57DBLL,  // 0.57791419883
    0x00000094B8B17F79LL,  // 0.58094319689
    0x000000957F008654LL,  // 0.58396914749
    0x00000096451A831DLL,  // 0.58699193669
    0x000000970AFD8D08LL,  // 0.59001145070
    0x00000097D0A7BBD2LL,  // 0.59302757583
    0x00000098961727C4LL,  // 0.59604019852
    0x000000995B49E9B6LL,  // 0.59904920536
    0x0000009A203E1B18LL,  // 0.60205448305
    0x0000009AE4F1D5F3LL,  // 0.60505591844
    0x0000009BA96334F1LL,  // 0.60805339854
    0x0000009C6D90535DLL,  // 0.61104681049
    0x0000009D31774D2CLL,  // 0.61403604159
    0x0000009DF5163F01LL,  // 0.61702097929
    0x0000009EB86B462DLL,  // 0.62000151122
    0x0000009F7B7480BDLL,  // 0.62297752517
    0x000000A03E300D73LL,  // 0.62594890908
    0x000000A1009C0BD6LL,  // 0.62891555108
    0x000000A1C2B69C2ELL,  // 0.63187733949
    0x000000A2847DDF8DLL,  // 0.63483416279
    0x000000A345EFF7D1LL,  // 0.63778590966
    0x000000A4070B07AELL,  // 0.64073246896
    0x000000A4C7CD32AALL,  // 0.64367372977
    0x000000A588349D2ALL,  // 0.64660958135
    0x000000A6483F6C71LL,  // 0.64953991315
    0x000000A707EBC6A7LL,  // 0.65246461487
    0x000000A7C737D2DDLL,  // 0.65538357637
    0x000000A88621B912LL,  // 0.65829668778
    0x000000A944A7A237LL,  // 0.66120383940
    0x000000AA02C7B832LL,  // 0.66410492179
    0x000000AAC08025E8LL,  // 0.66699982572
    0x000000AB7DCF173BLL,  // 0.66988844220
    0x000000AC3AB2B911LL,  // 0.67277066248
    0x000000ACF729395ALL,  // 0.67564637804
    0x000000ADB330C714LL,  // 0.67851548062
    0x000000AE6EC7924CLL,  // 0.68137786218
    0x000000AF29EBCC27LL,  // 0.68423341498
    0x000000AFE49BA6E6LL,  // 0.68708203149
    0x000000B09ED555E7LL,  // 0.68992360446
    0x000000B158970DABLL,  // 0.69275802692
    0x000000B211DF03DELL,  // 0.69558519215
    0x000000B2CAAB6F57LL,  // 0.69840499371
    0x000000B382FA881BLL,  // 0.70121732543
    0x000000B43ACA876ALL,  // 0.70402208143
    0x000000B4F219A7B7LL,  // 0.70681915612
    0x000000B5A8E624B9LL,  // 0.70960844418
    0x000000B65F2E3B66LL,  // 0.71238984060
    0x000000B714F029FALL,  // 0.71516324067
    0x000000B7CA2A2FFFLL,  // 0.71792853996
    0x000000B87EDA8E4CLL,  // 0.72068563437
    0x000000B932FF870CLL,  // 0.72343442008
    0x000000B9E6975DC3LL,  // 0.72617479362
    0x000000BA99A05750LL,  // 0.72890665180
    0x000000BB4C18B9F4LL,  // 0.73162989178
    0x000000BBFDFECD52LL,  // 0.73434441102
    0x000000BCAF50DA79LL,  // 0.73705010733
    0x000000BD600D2BE4LL,  // 0.73974687883
    0x000000BE10320D7FLL,  // 0.74243462400
    0x000000BEBFBDCCADLL,  // 0.74511324164
    0x000000BF6EAEB849LL,  // 0.74778263091
    0x000000C01D0320AELL,  // 0.75044269131
    0x000000C0CAB957B6LL,  // 0.75309332267
    0x000000C177CFB0C6LL,  // 0.75573442522
    0x000000C2244480CALL,  // 0.75836589951
    0x000000C2D0161E3ELL,  // 0.76098764647
    0x000000C37B42E12FLL,  // 0.76359956739
    0x000000C425C92342LL,  // 0.76620156394
    0x000000C4CFA73FB8LL,  // 0.76879353815
    0x000000C578DB936FLL,  // 0.77137539243
    0x000000C621647CE9LL,  // 0.77394702959
    0x000000C6C9405C4DLL,  // 0.77650835279
    0x000000C7706D9371LL,  // 0.77905926561
    0x000000C816EA85D5LL,  // 0.78159967201
    0x000000C8BCB598B0LL,  // 0.78412947634
    0x000000C961CD32EDLL,  // 0.78664858335
    0x000000CA062FBD34LL,  // 0.78915689821
    0x000000CAA9DBA1EBLL,  // 0.79165432647
    0x000000CB4CCF4D3ALL,  // 0.79414077411
    0x000000CBEF092D10LL,  // 0.79661614752
    0x000000CC9087B126LL,  // 0.79908035350
    0x000000CD31494B05LL,  // 0.80153329927
    0x000000CDD14C6E05LL,  // 0.80397489248
    0x000000CE708F8F58LL,  // 0.80640504121
    0x000000CF0F112607LL,  // 0.80882365397
    0x000000CFACCFAAF8LL,  // 0.81123063969
    0x000000D049C998F4LL,  // 0.81362590775
    0x000000D0E5FD6CA9LL,  // 0.81600936797
    0x000000D18169A4ACLL,  // 0.81838093062
    0x000000D21C0CC182LL,  // 0.82074050640
    0x000000D2B5E5459CLL,  // 0.82308800649
    0x000000D34EF1B562LL,  // 0.82542334250
    0x000000D3E7309732LL,  // 0.82774642650
    0x000000D47EA07366LL,  // 0.83005717103
    0x000000D5153FD456LL,  // 0.83235548910
    0x000000D5AB0D465DLL,  // 0.83464129417
    0x000000D6400757DCLL,  // 0.83691450019
    0x000000D6D42C993DLL,  // 0.83917502156
    0x000000D7677B9CF8LL,  // 0.84142277319
    0x000000D7F9F2F795LL,  // 0.84365767045
    0x000000D88B913FB0LL,  // 0.84587962918
    0x000000D91C550DFDLL,  // 0.84808856575
    0x000000D9AC3CFD4ALL,  // 0.85028439697
    0x000000DA3B47AA86LL,  // 0.85246704019
    0x000000DAC973B4BFLL,  // 0.85463641322
    0x000000DB56BFBD2ALL,  // 0.85679243439
    0x000000DBE32A6725LL,  // 0.85893502253
    0x000000DC6EB25839LL,  // 0.86106409696
    0x000000DCF956381ELL,  // 0.86317957754
    0x000000DD8314B0C1LL,  // 0.86528138461
    0x000000DE0BEC6E42LL,  // 0.86736943905
    0x000000DE93DC1EFELL,  // 0.86944366223
    0x000000DF1AE2738BLL,  // 0.87150397607
    0x000000DFA0FE1EC0LL,  // 0.87355030299
    0x000000E0262DD5B9LL,  // 0.87558256595
    0x000000E0AA704FD5LL,  // 0.87760068845
    0x000000E12DC446BELL,  // 0.87960459449
    0x000000E1B028766ALL,  // 0.88159420863
    0x000000E2319B9D20LL,  // 0.88356945597
    0x000000E2B21C7B78LL,  // 0.88553026213
    0x000000E331A9D461LL,  // 0.88747655330
    0x000000E3B0426D21LL,  // 0.88940825619
    0x000000E42DE50D5DLL,  // 0.89132529808
    0x000000E4AA907F16LL,  // 0.89322760680
    0x000000E526438EB1LL,  // 0.89511511072
    0x000000E5A0FD0AF5LL,  // 0.89698773878
    0x000000E61ABBC515LL,  // 0.89884542047
    0x000000E6937E90ACLL,  // 0.90068808586
    0x000000E70B4443C1LL,  // 0.90251566557
    0x000000E7820BB6D0LL,  // 0.90432809079
    0x000000E7F7D3C4C5LL,  // 0.90612529329
    0x000000E86C9B4B02LL,  // 0.90790720540
    0x000000E8E0612964LL,  // 0.90967376004
    0x000000E953244243LL,  // 0.91142489069
    0x000000E9C4E37A75LL,  // 0.91316053142
    0x000000EA359DB951LL,  // 0.91488061690
    0x000000EAA551E8B2LL,  // 0.91658508235
    0x000000EB13FEF4FBLL,  // 0.91827386361
    0x000000EB81A3CD17LL,  // 0.91994689710
    0x000000EBEE3F627DLL,  // 0.92160411982
    0x000000EC59D0A932LL,  // 0.92324546939
    0x000000ECC45697CDLL,  // 0.92487088400
    0x000000ED2DD02779LL,  // 0.92648030247
    0x000000ED963C53F6LL,  // 0.92807366419
    0x000000EDFD9A1B9ELL,  // 0.92965090918
    0x000000EE63E87F64LL,  // 0.93121197806
    0x000000EEC92682DBLL,  // 0.93275681205
    0x000000EF2D532C34LL,  // 0.93428535299
    0x000000EF906D8445LL,  // 0.93579754333
    0x000000EFF2749686LL,  // 0.93729332614
    0x000000F053677119LL,  // 0.93877264510
    0x000000F0B34524C7LL,  // 0.94023544453
    0x000000F1120CC507LL,  // 0.94168166933
    0x000000F16FBD67FBLL,  // 0.94311126507
    0x000000F1CC56267ALL,  // 0.94452417793
    0x000000F227D61C0ALL,  // 0.94592035470
    0x000000F2823C66E7LL,  // 0.94729974282
    0x000000F2DB882803LL,  // 0.94866229035
    0x000000F333B8830BLL,  // 0.95000794601
    0x000000F38ACC9E66LL,  // 0.95133665912
    0x000000F3E0C3A339LL,  // 0.95264837966
    0x000000F4359CBD67LL,  // 0.95394305824
    0x000000F489571B96LL,  // 0.95522064613
    0x000000F4DBF1EF2FLL,  // 0.95648109521
    0x000000F52D6C6C61LL,  // 0.95772435804
    0x000000F57DC5CA22LL,  // 0.95895038781
    0x000000F5CCFD4230LL,  // 0.96015913835
    0x000000F61B121116LL,  // 0.96135056417
    0x000000F66803762CLL,  // 0.96252462039
    0x000000F6B3D0B39ALL,  // 0.96368126283
    0x000000F6FE790E55LL,  // 0.96482044792
    0x000000F747FBCE2ALL,  // 0.96594213279
    0x000000F790583DB6LL,  // 0.96704627520
    0x000000F7D78DAA6ELL,  // 0.96813283359
    0x000000F81D9B64A0LL,  // 0.96920176703
    0x000000F86280BF71LL,  // 0.97025303530
    0x000000F8A63D10E4LL,  // 0.97128659880
    0x000000F8E8CFB1D7LL,  // 0.97230241863
    0x000000F92A37FE07LL,  // 0.97330045654
    0x000000F96A755411LL,  // 0.97428067496
    0x000000F9A9871575LL,  // 0.97524303697
    0x000000F9E76CA694LL,  // 0.97618750636
    0x000000FA24256EB5LL,  // 0.97711404755
    0x000000FA5FB0D805LL,  // 0.97802262567
    0x000000FA9A0E4F99LL,  // 0.97891320651
    0x000000FAD33D456ELL,  // 0.97978575654
    0x000000FB0B3D2C6BLL,  // 0.98064024291
    0x000000FB420D7A66LL,  // 0.98147663344
    0x000000FB77ADA81ELL,  // 0.98229489664
    0x000000FBAC1D3142LL,  // 0.98309500172
    0x000000FBDF5B9472LL,  // 0.98387691855
    0x000000FC1168533DLL,  // 0.98464061768
    0x000000FC4242F226LL,  // 0.98538607036
    0x000000FC71EAF8A1LL,  // 0.98611324854
    0x000000FCA05FF118LL,  // 0.98682212483
    0x000000FCCDA168EALL,  // 0.98751267253
    0x000000FCF9AEF06ELL,  // 0.98818486567
    0x000000FD24881AF2LL,  // 0.98883867891
    0x000000FD4E2C7EBCLL,  // 0.98947408766
    0x000000FD769BB50DLL,  // 0.99009106798
    0x000000FD9DD55A20LL,  // 0.99068959666
    0x000000FDC3D90D2DLL,  // 0.99126965114
    0x000000FDE8A67068LL,  // 0.99183120961
    0x000000FE0C3D2903LL,  // 0.99237425090
    0x000000FE2E9CDF2DLL,  // 0.99289875458
    0x000000FE4FC53E16LL,  // 0.99340470091
    0x000000FE6FB5F3EFLL,  // 0.99389207082
    0x000000FE8E6EB1E8LL,  // 0.99436084598
    0x000000FEABEF2C33LL,  // 0.99481100873
    0x000000FEC8371A07LL,  // 0.99524254213
    0x000000FEE346359ALL,  // 0.99565542992
    0x000000FEFD1C3C2ALL,  // 0.99604965657
    0x000000FF15B8EDF6LL,  // 0.99642520723
    0x000000FF2D1C0E45LL,  // 0.99678206776
    0x000000FF43456361LL,  // 0.99712022473
    0x000000FF5834B69DLL,  // 0.99743966540
    0x000000FF6BE9D451LL,  // 0.99774037775
    0x000000FF7E648BDCLL,  // 0.99802235045
    0x000000FF8FA4AFA7LL,  // 0.99828557290
    0x000000FF9FAA1520LL,  // 0.99853003517
    0x000000FFAE7494C1LL,  // 0.99875572807
    0x000000FFBC040A09LL,  // 0.99896264310
    0x000000FFC8585384LL,  // 0.99915077247
    0x000000FFD37152C6LL,  // 0.99932010909
    0x000000FFDD4EEC6ELL,  // 0.99947064659
    0x000000FFE5F10823LL,  // 0.99960237931
    0x000000FFED579097LL,  // 0.99971530228
    0x000000FFF382738ALL,  // 0.99980941125
    0x000000FFF871A1C3LL,  // 0.99988470268
    0x000000FFFC250F14LL,  // 0.99994117373
    0x000000FFFE9CB25ELL,  // 0.99997882228
    0x000000FFFFD88588LL   // 0.99999764690
};

// Helper function for binary search in the LUT
// X values are ordered from lowest (0.0) to highest (1.0)
inline constexpr auto FindAcosIndex(int64_t x, int output_fraction_bits) noexcept -> int {
    // Handle out-of-range values
    const int table_size = kAcosXValues.size();
    const int64_t one_in_fp = int64_t(1) << output_fraction_bits;
    
    // x ≥ 1.0: Return last index (acos(1) = 0)
    if (x >= one_in_fp) {
        return table_size - 1;
    }
    
    // x ≤ 0.0: Return index 0 (acos(0) = π/2)
    if (x <= 0) {
        return 0;
    }
    
    // Binary search - for x values ordered from smallest to largest
    int left = 0;
    int right = table_size - 1;
    
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (kAcosXValues[mid] < x) {
            // Value is smaller (to the left in normal order)
            left = mid + 1;
        } else if (kAcosXValues[mid] > x) {
            // Value is larger (to the right in normal order)
            right = mid - 1;
        } else {
            // Exact match
            return mid;
        }
    }
    
    // No exact match - right is now the index of the element just below x
    return right;
}

// Fast lookup acos(x) with binary search and linear interpolation
// Input x is in fixed-point format with specified fraction bits representing a value in [-1,1]
// Output is in fixed-point format with the same fraction bits representing acos(x)
// Precision is improved over uniform sampling due to Chebyshev node distribution
inline constexpr auto LookupAcosFast(int64_t x, int input_fraction_bits) noexcept -> int64_t {
    // Constants
    constexpr int kOutputFractionBits = 40;  // Internal calculation format
    constexpr int64_t kPi = 0x000003243F6A8885LL;  // pi = 3.141592653589793

    // Handle negative input using acos(-x) = π - acos(x)
    bool is_negative = false;
    if (x < 0) {
        x = -x;
        is_negative = true;
    }

    // Convert input to internal format if needed
    if (input_fraction_bits != kOutputFractionBits) {
        if (input_fraction_bits < kOutputFractionBits) {
            x <<= (kOutputFractionBits - input_fraction_bits);
        } else {
            x >>= (input_fraction_bits - kOutputFractionBits);
        }
    }

    // Handle extreme values directly
    const int64_t one_in_fp = int64_t(1) << kOutputFractionBits;
    if (x >= one_in_fp) {
        // |x| ≥ 1.0, return 0 for positive x or π for negative x
        int64_t result = is_negative ? kPi : 0;
        
        // Convert result to input format if needed
        if (input_fraction_bits != kOutputFractionBits) {
            if (input_fraction_bits < kOutputFractionBits) {
                result >>= (kOutputFractionBits - input_fraction_bits);
            } else {
                result <<= (input_fraction_bits - kOutputFractionBits);
            }
        }
        return result;
    }

    // Find the index for interpolation using binary search
    const int idx = FindAcosIndex(x, kOutputFractionBits);

    // Handle exact match
    if (kAcosXValues[idx] == x) {
        int64_t result = kAcosLut[idx];
        if (is_negative) {
            result = kPi - result;
        }
        if (input_fraction_bits != kOutputFractionBits) {
            if (input_fraction_bits < kOutputFractionBits) {
                result >>= (kOutputFractionBits - input_fraction_bits);
            } else {
                result <<= (input_fraction_bits - kOutputFractionBits);
            }
        }
        return result;
    }

    // Get the adjacent indices for interpolation
    const int idx_next = idx + 1;
    if (idx_next >= static_cast<int>(kAcosXValues.size())) {
        // We're at the last point, return it directly
        int64_t result = kAcosLut[idx];
        if (is_negative) {
            result = kPi - result;
        }
        if (input_fraction_bits != kOutputFractionBits) {
            if (input_fraction_bits < kOutputFractionBits) {
                result >>= (kOutputFractionBits - input_fraction_bits);
            } else {
                result <<= (input_fraction_bits - kOutputFractionBits);
            }
        }
        return result;
    }

    // Linear interpolation
    const int64_t x0 = kAcosXValues[idx];
    const int64_t x1 = kAcosXValues[idx_next];
    const int64_t y0 = kAcosLut[idx];
    const int64_t y1 = kAcosLut[idx_next];

    // Calculate the interpolation parameter t
    // t = (x - x0) / (x1 - x0)
    int64_t t = Primitives::Fixed64Div(x - x0, x1 - x0, kOutputFractionBits);

    // Linear interpolation: y = y0 + t * (y1 - y0)
    int64_t result = y0 + Primitives::Fixed64Mul(y1 - y0, t, kOutputFractionBits);

    // Apply negative input formula if needed
    if (is_negative) {
        result = kPi - result;
    }

    // Convert result back to input format if needed
    if (input_fraction_bits != kOutputFractionBits) {
        if (input_fraction_bits < kOutputFractionBits) {
            result >>= (kOutputFractionBits - input_fraction_bits);
        } else {
            result <<= (input_fraction_bits - kOutputFractionBits);
        }
    }

    return result;
}

// Accurate lookup acos(x) with binary search and quadratic interpolation
// Input x is in fixed-point format with specified fraction bits representing a value in [-1,1]
// Output is in fixed-point format with the same fraction bits representing acos(x)
// Precision is significantly improved due to Chebyshev node distribution and quadratic interpolation
inline constexpr auto LookupAcos(int64_t x, int input_fraction_bits) noexcept -> int64_t {
    // Constants
    constexpr int kOutputFractionBits = 40;  // Internal calculation format
    constexpr int64_t kPi = 0x000003243F6A8885LL;  // pi = 3.141592653589793

    // Handle negative input using acos(-x) = π - acos(x)
    bool is_negative = false;
    if (x < 0) {
        x = -x;
        is_negative = true;
    }

    // Convert input to internal format if needed
    if (input_fraction_bits != kOutputFractionBits) {
        if (input_fraction_bits < kOutputFractionBits) {
            x <<= (kOutputFractionBits - input_fraction_bits);
        } else {
            x >>= (input_fraction_bits - kOutputFractionBits);
        }
    }

    // Handle extreme values directly
    const int64_t one_in_fp = int64_t(1) << kOutputFractionBits;
    if (x >= one_in_fp) {
        // |x| ≥ 1.0, return 0 for positive x or π for negative x
        int64_t result = is_negative ? kPi : 0;
        
        // Convert result to input format if needed
        if (input_fraction_bits != kOutputFractionBits) {
            if (input_fraction_bits < kOutputFractionBits) {
                result >>= (kOutputFractionBits - input_fraction_bits);
            } else {
                result <<= (input_fraction_bits - kOutputFractionBits);
            }
        }
        return result;
    }

    // Find the index for interpolation using binary search
    const int idx = FindAcosIndex(x, kOutputFractionBits);

    // Handle exact match
    if (kAcosXValues[idx] == x) {
        int64_t result = kAcosLut[idx];
        if (is_negative) {
            result = kPi - result;
        }
        if (input_fraction_bits != kOutputFractionBits) {
            if (input_fraction_bits < kOutputFractionBits) {
                result >>= (kOutputFractionBits - input_fraction_bits);
            } else {
                result <<= (input_fraction_bits - kOutputFractionBits);
            }
        }
        return result;
    }

    // Get table values for quadratic interpolation
    // Need three points for quadratic interpolation
    int64_t y1 = kAcosLut[idx];       // Current point
    // For right point (idx+1)
    int64_t y2;
    if (idx < static_cast<int>(kAcosLut.size()) - 1) {
        y2 = kAcosLut[idx + 1];   // Next point
    } else {
        // At rightmost boundary, extrapolate
        y2 = y1 * 2 - kAcosLut[idx - 1];  // Mirror the slope
    }
    // For left point (idx-1)
    int64_t y0;
    if (idx > 0) {
        y0 = kAcosLut[idx - 1];  // Previous point
    } else {
        // At leftmost boundary, extrapolate
        y0 = y1 + (y1 - y2);  // Mirror the slope for better extrapolation
    }

    // Get x values for interpolation
    int64_t x1 = kAcosXValues[idx];
    int64_t x0 = (idx > 0) ? kAcosXValues[idx - 1] : x1 + (x1 - kAcosXValues[idx + 1]);
    int64_t x2 = (idx < static_cast<int>(kAcosLut.size()) - 1) ? kAcosXValues[idx + 1] : x1 - (kAcosXValues[idx - 1] - x1);

    // Compute Lagrange basis polynomials
    // L0(x) = ((x-x1)*(x-x2))/((x0-x1)*(x0-x2))
    // L1(x) = ((x-x0)*(x-x2))/((x1-x0)*(x1-x2))
    // L2(x) = ((x-x0)*(x-x1))/((x2-x0)*(x2-x1))
    
    // For fixed-point arithmetic, we'll calculate these step by step
    const int64_t x_minus_x0 = x - x0;
    const int64_t x_minus_x1 = x - x1;
    const int64_t x_minus_x2 = x - x2;
    
    const int64_t x0_minus_x1 = x0 - x1;
    const int64_t x0_minus_x2 = x0 - x2;
    const int64_t x1_minus_x0 = x1 - x0;
    const int64_t x1_minus_x2 = x1 - x2;
    const int64_t x2_minus_x0 = x2 - x0;
    const int64_t x2_minus_x1 = x2 - x1;
    
    // Calculate L0, L1, L2 with careful fixed-point operations
    int64_t L0_num = Primitives::Fixed64Mul(x_minus_x1, x_minus_x2, kOutputFractionBits);
    int64_t L0_den = Primitives::Fixed64Mul(x0_minus_x1, x0_minus_x2, kOutputFractionBits);
    int64_t L0 = Primitives::Fixed64Div(L0_num, L0_den, kOutputFractionBits);
    
    int64_t L1_num = Primitives::Fixed64Mul(x_minus_x0, x_minus_x2, kOutputFractionBits);
    int64_t L1_den = Primitives::Fixed64Mul(x1_minus_x0, x1_minus_x2, kOutputFractionBits);
    int64_t L1 = Primitives::Fixed64Div(L1_num, L1_den, kOutputFractionBits);
    
    int64_t L2_num = Primitives::Fixed64Mul(x_minus_x0, x_minus_x1, kOutputFractionBits);
    int64_t L2_den = Primitives::Fixed64Mul(x2_minus_x0, x2_minus_x1, kOutputFractionBits);
    int64_t L2 = Primitives::Fixed64Div(L2_num, L2_den, kOutputFractionBits);
    
    // Compute the quadratic interpolation
    int64_t result = Primitives::Fixed64Mul(y0, L0, kOutputFractionBits) +
                     Primitives::Fixed64Mul(y1, L1, kOutputFractionBits) +
                     Primitives::Fixed64Mul(y2, L2, kOutputFractionBits);

    // Apply negative input formula if needed
    if (is_negative) {
        result = kPi - result;
    }

    // Convert result back to input format if needed
    if (input_fraction_bits != kOutputFractionBits) {
        if (input_fraction_bits < kOutputFractionBits) {
            result >>= (kOutputFractionBits - input_fraction_bits);
        } else {
            result <<= (input_fraction_bits - kOutputFractionBits);
        }
    }

    return result;
}

}  // namespace math::fp::detail